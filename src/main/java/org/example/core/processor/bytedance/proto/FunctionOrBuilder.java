// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: repo.proto

package org.example.core.processor.bytedance.proto;

public interface FunctionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:security.sast.codegraph.repopb.Function)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * qualified name
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * qualified name
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  java.util.List<org.example.core.processor.bytedance.proto.Function.Variable> 
      getVariablesList();
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  org.example.core.processor.bytedance.proto.Function.Variable getVariables(int index);
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  int getVariablesCount();
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  java.util.List<? extends org.example.core.processor.bytedance.proto.Function.VariableOrBuilder> 
      getVariablesOrBuilderList();
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  org.example.core.processor.bytedance.proto.Function.VariableOrBuilder getVariablesOrBuilder(
      int index);

  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  java.util.List<org.example.core.processor.bytedance.proto.Statement> 
      getStatementsList();
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  org.example.core.processor.bytedance.proto.Statement getStatements(int index);
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  int getStatementsCount();
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  java.util.List<? extends org.example.core.processor.bytedance.proto.StatementOrBuilder> 
      getStatementsOrBuilderList();
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  org.example.core.processor.bytedance.proto.StatementOrBuilder getStatementsOrBuilder(
      int index);

  /**
   * <pre>
   * local id of parameters
   * </pre>
   *
   * <code>repeated int32 arg_ids = 4;</code>
   * @return A list containing the argIds.
   */
  java.util.List<java.lang.Integer> getArgIdsList();
  /**
   * <pre>
   * local id of parameters
   * </pre>
   *
   * <code>repeated int32 arg_ids = 4;</code>
   * @return The count of argIds.
   */
  int getArgIdsCount();
  /**
   * <pre>
   * local id of parameters
   * </pre>
   *
   * <code>repeated int32 arg_ids = 4;</code>
   * @param index The index of the element to return.
   * @return The argIds at the given index.
   */
  int getArgIds(int index);

  /**
   * <pre>
   * local id of free vars
   * </pre>
   *
   * <code>repeated int32 free_var_ids = 5;</code>
   * @return A list containing the freeVarIds.
   */
  java.util.List<java.lang.Integer> getFreeVarIdsList();
  /**
   * <pre>
   * local id of free vars
   * </pre>
   *
   * <code>repeated int32 free_var_ids = 5;</code>
   * @return The count of freeVarIds.
   */
  int getFreeVarIdsCount();
  /**
   * <pre>
   * local id of free vars
   * </pre>
   *
   * <code>repeated int32 free_var_ids = 5;</code>
   * @param index The index of the element to return.
   * @return The freeVarIds at the given index.
   */
  int getFreeVarIds(int index);

  /**
   * <pre>
   * local id of return
   * </pre>
   *
   * <code>repeated int32 ret_ids = 6;</code>
   * @return A list containing the retIds.
   */
  java.util.List<java.lang.Integer> getRetIdsList();
  /**
   * <pre>
   * local id of return
   * </pre>
   *
   * <code>repeated int32 ret_ids = 6;</code>
   * @return The count of retIds.
   */
  int getRetIdsCount();
  /**
   * <pre>
   * local id of return
   * </pre>
   *
   * <code>repeated int32 ret_ids = 6;</code>
   * @param index The index of the element to return.
   * @return The retIds at the given index.
   */
  int getRetIds(int index);

  /**
   * <code>string name = 8;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 8;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
   * @return Whether the signature field is set.
   */
  boolean hasSignature();
  /**
   * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
   * @return The signature.
   */
  org.example.core.processor.bytedance.proto.FuncSignature getSignature();
  /**
   * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
   */
  org.example.core.processor.bytedance.proto.FuncSignatureOrBuilder getSignatureOrBuilder();

  /**
   * <pre>
   * set to true if statements is not provided
   * </pre>
   *
   * <code>bool is_ignore = 101;</code>
   * @return The isIgnore.
   */
  boolean getIsIgnore();
}
