// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: repo.proto

package org.example.core.hook.bytedance.proto;

/**
 * Protobuf type {@code security.sast.codegraph.repopb.Function}
 */
public final class Function extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:security.sast.codegraph.repopb.Function)
    FunctionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Function.newBuilder() to construct.
  private Function(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Function() {
    id_ = "";
    variables_ = java.util.Collections.emptyList();
    statements_ = java.util.Collections.emptyList();
    argIds_ = emptyIntList();
    freeVarIds_ = emptyIntList();
    retIds_ = emptyIntList();
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Function();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Function.class, Function.Builder.class);
  }

  public interface VariableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:security.sast.codegraph.repopb.Function.Variable)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * store the node here if it is a local var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
     * @return Whether the localNode field is set.
     */
    boolean hasLocalNode();
    /**
     * <pre>
     * store the node here if it is a local var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
     * @return The localNode.
     */
    Node getLocalNode();
    /**
     * <pre>
     * store the node here if it is a local var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
     */
    NodeOrBuilder getLocalNodeOrBuilder();

    /**
     * <pre>
     * global var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
     * @return Whether the globalRef field is set.
     */
    boolean hasGlobalRef();
    /**
     * <pre>
     * global var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
     * @return The globalRef.
     */
    GlobalReference getGlobalRef();
    /**
     * <pre>
     * global var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
     */
    GlobalReferenceOrBuilder getGlobalRefOrBuilder();

    Function.Variable.ReferenceCase getReferenceCase();
  }
  /**
   * Protobuf type {@code security.sast.codegraph.repopb.Function.Variable}
   */
  public static final class Variable extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:security.sast.codegraph.repopb.Function.Variable)
      VariableOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Variable.newBuilder() to construct.
    private Variable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Variable() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Variable();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_Variable_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_Variable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Function.Variable.class, Function.Variable.Builder.class);
    }

    private int referenceCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object reference_;
    public enum ReferenceCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LOCAL_NODE(1),
      GLOBAL_REF(2),
      REFERENCE_NOT_SET(0);
      private final int value;
      private ReferenceCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReferenceCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReferenceCase forNumber(int value) {
        switch (value) {
          case 1: return LOCAL_NODE;
          case 2: return GLOBAL_REF;
          case 0: return REFERENCE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReferenceCase
    getReferenceCase() {
      return ReferenceCase.forNumber(
          referenceCase_);
    }

    public static final int LOCAL_NODE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * store the node here if it is a local var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
     * @return Whether the localNode field is set.
     */
    @java.lang.Override
    public boolean hasLocalNode() {
      return referenceCase_ == 1;
    }
    /**
     * <pre>
     * store the node here if it is a local var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
     * @return The localNode.
     */
    @java.lang.Override
    public Node getLocalNode() {
      if (referenceCase_ == 1) {
         return (Node) reference_;
      }
      return Node.getDefaultInstance();
    }
    /**
     * <pre>
     * store the node here if it is a local var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
     */
    @java.lang.Override
    public NodeOrBuilder getLocalNodeOrBuilder() {
      if (referenceCase_ == 1) {
         return (Node) reference_;
      }
      return Node.getDefaultInstance();
    }

    public static final int GLOBAL_REF_FIELD_NUMBER = 2;
    /**
     * <pre>
     * global var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
     * @return Whether the globalRef field is set.
     */
    @java.lang.Override
    public boolean hasGlobalRef() {
      return referenceCase_ == 2;
    }
    /**
     * <pre>
     * global var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
     * @return The globalRef.
     */
    @java.lang.Override
    public GlobalReference getGlobalRef() {
      if (referenceCase_ == 2) {
         return (GlobalReference) reference_;
      }
      return GlobalReference.getDefaultInstance();
    }
    /**
     * <pre>
     * global var
     * </pre>
     *
     * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
     */
    @java.lang.Override
    public GlobalReferenceOrBuilder getGlobalRefOrBuilder() {
      if (referenceCase_ == 2) {
         return (GlobalReference) reference_;
      }
      return GlobalReference.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (referenceCase_ == 1) {
        output.writeMessage(1, (Node) reference_);
      }
      if (referenceCase_ == 2) {
        output.writeMessage(2, (GlobalReference) reference_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (referenceCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (Node) reference_);
      }
      if (referenceCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (GlobalReference) reference_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Function.Variable)) {
        return super.equals(obj);
      }
      Function.Variable other = (Function.Variable) obj;

      if (!getReferenceCase().equals(other.getReferenceCase())) return false;
      switch (referenceCase_) {
        case 1:
          if (!getLocalNode()
              .equals(other.getLocalNode())) return false;
          break;
        case 2:
          if (!getGlobalRef()
              .equals(other.getGlobalRef())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (referenceCase_) {
        case 1:
          hash = (37 * hash) + LOCAL_NODE_FIELD_NUMBER;
          hash = (53 * hash) + getLocalNode().hashCode();
          break;
        case 2:
          hash = (37 * hash) + GLOBAL_REF_FIELD_NUMBER;
          hash = (53 * hash) + getGlobalRef().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Function.Variable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Function.Variable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Function.Variable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Function.Variable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Function.Variable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Function.Variable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Function.Variable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Function.Variable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Function.Variable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static Function.Variable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Function.Variable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Function.Variable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Function.Variable prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code security.sast.codegraph.repopb.Function.Variable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:security.sast.codegraph.repopb.Function.Variable)
        Function.VariableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_Variable_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_Variable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Function.Variable.class, Function.Variable.Builder.class);
      }

      // Construct using org.example.core.processor.bytedance.proto.Function.Variable.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (localNodeBuilder_ != null) {
          localNodeBuilder_.clear();
        }
        if (globalRefBuilder_ != null) {
          globalRefBuilder_.clear();
        }
        referenceCase_ = 0;
        reference_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_Variable_descriptor;
      }

      @java.lang.Override
      public Function.Variable getDefaultInstanceForType() {
        return Function.Variable.getDefaultInstance();
      }

      @java.lang.Override
      public Function.Variable build() {
        Function.Variable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public Function.Variable buildPartial() {
        Function.Variable result = new Function.Variable(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(Function.Variable result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(Function.Variable result) {
        result.referenceCase_ = referenceCase_;
        result.reference_ = this.reference_;
        if (referenceCase_ == 1 &&
            localNodeBuilder_ != null) {
          result.reference_ = localNodeBuilder_.build();
        }
        if (referenceCase_ == 2 &&
            globalRefBuilder_ != null) {
          result.reference_ = globalRefBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Function.Variable) {
          return mergeFrom((Function.Variable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Function.Variable other) {
        if (other == Function.Variable.getDefaultInstance()) return this;
        switch (other.getReferenceCase()) {
          case LOCAL_NODE: {
            mergeLocalNode(other.getLocalNode());
            break;
          }
          case GLOBAL_REF: {
            mergeGlobalRef(other.getGlobalRef());
            break;
          }
          case REFERENCE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getLocalNodeFieldBuilder().getBuilder(),
                    extensionRegistry);
                referenceCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getGlobalRefFieldBuilder().getBuilder(),
                    extensionRegistry);
                referenceCase_ = 2;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int referenceCase_ = 0;
      private java.lang.Object reference_;
      public ReferenceCase
          getReferenceCase() {
        return ReferenceCase.forNumber(
            referenceCase_);
      }

      public Builder clearReference() {
        referenceCase_ = 0;
        reference_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
              Node, Node.Builder, NodeOrBuilder> localNodeBuilder_;
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       * @return Whether the localNode field is set.
       */
      @java.lang.Override
      public boolean hasLocalNode() {
        return referenceCase_ == 1;
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       * @return The localNode.
       */
      @java.lang.Override
      public Node getLocalNode() {
        if (localNodeBuilder_ == null) {
          if (referenceCase_ == 1) {
            return (Node) reference_;
          }
          return Node.getDefaultInstance();
        } else {
          if (referenceCase_ == 1) {
            return localNodeBuilder_.getMessage();
          }
          return Node.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      public Builder setLocalNode(Node value) {
        if (localNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reference_ = value;
          onChanged();
        } else {
          localNodeBuilder_.setMessage(value);
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      public Builder setLocalNode(
          Node.Builder builderForValue) {
        if (localNodeBuilder_ == null) {
          reference_ = builderForValue.build();
          onChanged();
        } else {
          localNodeBuilder_.setMessage(builderForValue.build());
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      public Builder mergeLocalNode(Node value) {
        if (localNodeBuilder_ == null) {
          if (referenceCase_ == 1 &&
              reference_ != Node.getDefaultInstance()) {
            reference_ = Node.newBuilder((Node) reference_)
                .mergeFrom(value).buildPartial();
          } else {
            reference_ = value;
          }
          onChanged();
        } else {
          if (referenceCase_ == 1) {
            localNodeBuilder_.mergeFrom(value);
          } else {
            localNodeBuilder_.setMessage(value);
          }
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      public Builder clearLocalNode() {
        if (localNodeBuilder_ == null) {
          if (referenceCase_ == 1) {
            referenceCase_ = 0;
            reference_ = null;
            onChanged();
          }
        } else {
          if (referenceCase_ == 1) {
            referenceCase_ = 0;
            reference_ = null;
          }
          localNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      public Node.Builder getLocalNodeBuilder() {
        return getLocalNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      @java.lang.Override
      public NodeOrBuilder getLocalNodeOrBuilder() {
        if ((referenceCase_ == 1) && (localNodeBuilder_ != null)) {
          return localNodeBuilder_.getMessageOrBuilder();
        } else {
          if (referenceCase_ == 1) {
            return (Node) reference_;
          }
          return Node.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * store the node here if it is a local var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.Node local_node = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              Node, Node.Builder, NodeOrBuilder>
          getLocalNodeFieldBuilder() {
        if (localNodeBuilder_ == null) {
          if (!(referenceCase_ == 1)) {
            reference_ = Node.getDefaultInstance();
          }
          localNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  Node, Node.Builder, NodeOrBuilder>(
                  (Node) reference_,
                  getParentForChildren(),
                  isClean());
          reference_ = null;
        }
        referenceCase_ = 1;
        onChanged();
        return localNodeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              GlobalReference, GlobalReference.Builder, GlobalReferenceOrBuilder> globalRefBuilder_;
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       * @return Whether the globalRef field is set.
       */
      @java.lang.Override
      public boolean hasGlobalRef() {
        return referenceCase_ == 2;
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       * @return The globalRef.
       */
      @java.lang.Override
      public GlobalReference getGlobalRef() {
        if (globalRefBuilder_ == null) {
          if (referenceCase_ == 2) {
            return (GlobalReference) reference_;
          }
          return GlobalReference.getDefaultInstance();
        } else {
          if (referenceCase_ == 2) {
            return globalRefBuilder_.getMessage();
          }
          return GlobalReference.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      public Builder setGlobalRef(GlobalReference value) {
        if (globalRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reference_ = value;
          onChanged();
        } else {
          globalRefBuilder_.setMessage(value);
        }
        referenceCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      public Builder setGlobalRef(
          GlobalReference.Builder builderForValue) {
        if (globalRefBuilder_ == null) {
          reference_ = builderForValue.build();
          onChanged();
        } else {
          globalRefBuilder_.setMessage(builderForValue.build());
        }
        referenceCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      public Builder mergeGlobalRef(GlobalReference value) {
        if (globalRefBuilder_ == null) {
          if (referenceCase_ == 2 &&
              reference_ != GlobalReference.getDefaultInstance()) {
            reference_ = GlobalReference.newBuilder((GlobalReference) reference_)
                .mergeFrom(value).buildPartial();
          } else {
            reference_ = value;
          }
          onChanged();
        } else {
          if (referenceCase_ == 2) {
            globalRefBuilder_.mergeFrom(value);
          } else {
            globalRefBuilder_.setMessage(value);
          }
        }
        referenceCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      public Builder clearGlobalRef() {
        if (globalRefBuilder_ == null) {
          if (referenceCase_ == 2) {
            referenceCase_ = 0;
            reference_ = null;
            onChanged();
          }
        } else {
          if (referenceCase_ == 2) {
            referenceCase_ = 0;
            reference_ = null;
          }
          globalRefBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      public GlobalReference.Builder getGlobalRefBuilder() {
        return getGlobalRefFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      @java.lang.Override
      public GlobalReferenceOrBuilder getGlobalRefOrBuilder() {
        if ((referenceCase_ == 2) && (globalRefBuilder_ != null)) {
          return globalRefBuilder_.getMessageOrBuilder();
        } else {
          if (referenceCase_ == 2) {
            return (GlobalReference) reference_;
          }
          return GlobalReference.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * global var
       * </pre>
       *
       * <code>.security.sast.codegraph.repopb.GlobalReference global_ref = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              GlobalReference, GlobalReference.Builder, GlobalReferenceOrBuilder>
          getGlobalRefFieldBuilder() {
        if (globalRefBuilder_ == null) {
          if (!(referenceCase_ == 2)) {
            reference_ = GlobalReference.getDefaultInstance();
          }
          globalRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  GlobalReference, GlobalReference.Builder, GlobalReferenceOrBuilder>(
                  (GlobalReference) reference_,
                  getParentForChildren(),
                  isClean());
          reference_ = null;
        }
        referenceCase_ = 2;
        onChanged();
        return globalRefBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:security.sast.codegraph.repopb.Function.Variable)
    }

    // @@protoc_insertion_point(class_scope:security.sast.codegraph.repopb.Function.Variable)
    private static final Function.Variable DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Function.Variable();
    }

    public static Function.Variable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Variable>
        PARSER = new com.google.protobuf.AbstractParser<Variable>() {
      @java.lang.Override
      public Variable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Variable> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Variable> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public Function.Variable getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * qualified name
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * qualified name
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VARIABLES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<Function.Variable> variables_;
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  @java.lang.Override
  public java.util.List<Function.Variable> getVariablesList() {
    return variables_;
  }
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends Function.VariableOrBuilder>
      getVariablesOrBuilderList() {
    return variables_;
  }
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  @java.lang.Override
  public int getVariablesCount() {
    return variables_.size();
  }
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  @java.lang.Override
  public Function.Variable getVariables(int index) {
    return variables_.get(index);
  }
  /**
   * <pre>
   * var_id is the index of variable in the array
   * </pre>
   *
   * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
   */
  @java.lang.Override
  public Function.VariableOrBuilder getVariablesOrBuilder(
      int index) {
    return variables_.get(index);
  }

  public static final int STATEMENTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<Statement> statements_;
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  @java.lang.Override
  public java.util.List<Statement> getStatementsList() {
    return statements_;
  }
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends StatementOrBuilder>
      getStatementsOrBuilderList() {
    return statements_;
  }
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  @java.lang.Override
  public int getStatementsCount() {
    return statements_.size();
  }
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  @java.lang.Override
  public Statement getStatements(int index) {
    return statements_.get(index);
  }
  /**
   * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
   */
  @java.lang.Override
  public StatementOrBuilder getStatementsOrBuilder(
      int index) {
    return statements_.get(index);
  }

  public static final int ARG_IDS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList argIds_;
  /**
   * <pre>
   * local id of parameters
   * </pre>
   *
   * <code>repeated int32 arg_ids = 4;</code>
   * @return A list containing the argIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getArgIdsList() {
    return argIds_;
  }
  /**
   * <pre>
   * local id of parameters
   * </pre>
   *
   * <code>repeated int32 arg_ids = 4;</code>
   * @return The count of argIds.
   */
  public int getArgIdsCount() {
    return argIds_.size();
  }
  /**
   * <pre>
   * local id of parameters
   * </pre>
   *
   * <code>repeated int32 arg_ids = 4;</code>
   * @param index The index of the element to return.
   * @return The argIds at the given index.
   */
  public int getArgIds(int index) {
    return argIds_.getInt(index);
  }
  private int argIdsMemoizedSerializedSize = -1;

  public static final int FREE_VAR_IDS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList freeVarIds_;
  /**
   * <pre>
   * local id of free vars
   * </pre>
   *
   * <code>repeated int32 free_var_ids = 5;</code>
   * @return A list containing the freeVarIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getFreeVarIdsList() {
    return freeVarIds_;
  }
  /**
   * <pre>
   * local id of free vars
   * </pre>
   *
   * <code>repeated int32 free_var_ids = 5;</code>
   * @return The count of freeVarIds.
   */
  public int getFreeVarIdsCount() {
    return freeVarIds_.size();
  }
  /**
   * <pre>
   * local id of free vars
   * </pre>
   *
   * <code>repeated int32 free_var_ids = 5;</code>
   * @param index The index of the element to return.
   * @return The freeVarIds at the given index.
   */
  public int getFreeVarIds(int index) {
    return freeVarIds_.getInt(index);
  }
  private int freeVarIdsMemoizedSerializedSize = -1;

  public static final int RET_IDS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList retIds_;
  /**
   * <pre>
   * local id of return
   * </pre>
   *
   * <code>repeated int32 ret_ids = 6;</code>
   * @return A list containing the retIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getRetIdsList() {
    return retIds_;
  }
  /**
   * <pre>
   * local id of return
   * </pre>
   *
   * <code>repeated int32 ret_ids = 6;</code>
   * @return The count of retIds.
   */
  public int getRetIdsCount() {
    return retIds_.size();
  }
  /**
   * <pre>
   * local id of return
   * </pre>
   *
   * <code>repeated int32 ret_ids = 6;</code>
   * @param index The index of the element to return.
   * @return The retIds at the given index.
   */
  public int getRetIds(int index) {
    return retIds_.getInt(index);
  }
  private int retIdsMemoizedSerializedSize = -1;

  public static final int NAME_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <code>string name = 8;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 8;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIGNATURE_FIELD_NUMBER = 10;
  private FuncSignature signature_;
  /**
   * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
   * @return Whether the signature field is set.
   */
  @java.lang.Override
  public boolean hasSignature() {
    return signature_ != null;
  }
  /**
   * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
   * @return The signature.
   */
  @java.lang.Override
  public FuncSignature getSignature() {
    return signature_ == null ? FuncSignature.getDefaultInstance() : signature_;
  }
  /**
   * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
   */
  @java.lang.Override
  public FuncSignatureOrBuilder getSignatureOrBuilder() {
    return signature_ == null ? FuncSignature.getDefaultInstance() : signature_;
  }

  public static final int IS_IGNORE_FIELD_NUMBER = 101;
  private boolean isIgnore_ = false;
  /**
   * <pre>
   * set to true if statements is not provided
   * </pre>
   *
   * <code>bool is_ignore = 101;</code>
   * @return The isIgnore.
   */
  @java.lang.Override
  public boolean getIsIgnore() {
    return isIgnore_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    for (int i = 0; i < variables_.size(); i++) {
      output.writeMessage(2, variables_.get(i));
    }
    for (int i = 0; i < statements_.size(); i++) {
      output.writeMessage(3, statements_.get(i));
    }
    if (getArgIdsList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(argIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < argIds_.size(); i++) {
      output.writeInt32NoTag(argIds_.getInt(i));
    }
    if (getFreeVarIdsList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(freeVarIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < freeVarIds_.size(); i++) {
      output.writeInt32NoTag(freeVarIds_.getInt(i));
    }
    if (getRetIdsList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(retIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < retIds_.size(); i++) {
      output.writeInt32NoTag(retIds_.getInt(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, name_);
    }
    if (signature_ != null) {
      output.writeMessage(10, getSignature());
    }
    if (isIgnore_ != false) {
      output.writeBool(101, isIgnore_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    for (int i = 0; i < variables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, variables_.get(i));
    }
    for (int i = 0; i < statements_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, statements_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < argIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(argIds_.getInt(i));
      }
      size += dataSize;
      if (!getArgIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      argIdsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < freeVarIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(freeVarIds_.getInt(i));
      }
      size += dataSize;
      if (!getFreeVarIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      freeVarIdsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < retIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(retIds_.getInt(i));
      }
      size += dataSize;
      if (!getRetIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      retIdsMemoizedSerializedSize = dataSize;
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, name_);
    }
    if (signature_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getSignature());
    }
    if (isIgnore_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(101, isIgnore_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Function)) {
      return super.equals(obj);
    }
    Function other = (Function) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getVariablesList()
        .equals(other.getVariablesList())) return false;
    if (!getStatementsList()
        .equals(other.getStatementsList())) return false;
    if (!getArgIdsList()
        .equals(other.getArgIdsList())) return false;
    if (!getFreeVarIdsList()
        .equals(other.getFreeVarIdsList())) return false;
    if (!getRetIdsList()
        .equals(other.getRetIdsList())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (hasSignature() != other.hasSignature()) return false;
    if (hasSignature()) {
      if (!getSignature()
          .equals(other.getSignature())) return false;
    }
    if (getIsIgnore()
        != other.getIsIgnore()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (getVariablesCount() > 0) {
      hash = (37 * hash) + VARIABLES_FIELD_NUMBER;
      hash = (53 * hash) + getVariablesList().hashCode();
    }
    if (getStatementsCount() > 0) {
      hash = (37 * hash) + STATEMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getStatementsList().hashCode();
    }
    if (getArgIdsCount() > 0) {
      hash = (37 * hash) + ARG_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getArgIdsList().hashCode();
    }
    if (getFreeVarIdsCount() > 0) {
      hash = (37 * hash) + FREE_VAR_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getFreeVarIdsList().hashCode();
    }
    if (getRetIdsCount() > 0) {
      hash = (37 * hash) + RET_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getRetIdsList().hashCode();
    }
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasSignature()) {
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
    }
    hash = (37 * hash) + IS_IGNORE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsIgnore());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Function parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Function parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Function parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Function parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Function parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Function parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Function parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Function parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Function parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static Function parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Function parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Function parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Function prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code security.sast.codegraph.repopb.Function}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:security.sast.codegraph.repopb.Function)
          FunctionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Function.class, Function.Builder.class);
    }

    // Construct using org.example.core.processor.bytedance.proto.Function.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
      } else {
        variables_ = null;
        variablesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (statementsBuilder_ == null) {
        statements_ = java.util.Collections.emptyList();
      } else {
        statements_ = null;
        statementsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      argIds_ = emptyIntList();
      freeVarIds_ = emptyIntList();
      retIds_ = emptyIntList();
      name_ = "";
      signature_ = null;
      if (signatureBuilder_ != null) {
        signatureBuilder_.dispose();
        signatureBuilder_ = null;
      }
      isIgnore_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CodeGraphRepo.internal_static_security_sast_codegraph_repopb_Function_descriptor;
    }

    @java.lang.Override
    public Function getDefaultInstanceForType() {
      return Function.getDefaultInstance();
    }

    @java.lang.Override
    public Function build() {
      Function result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public Function buildPartial() {
      Function result = new Function(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(Function result) {
      if (variablesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          variables_ = java.util.Collections.unmodifiableList(variables_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.variables_ = variables_;
      } else {
        result.variables_ = variablesBuilder_.build();
      }
      if (statementsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          statements_ = java.util.Collections.unmodifiableList(statements_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.statements_ = statements_;
      } else {
        result.statements_ = statementsBuilder_.build();
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        argIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.argIds_ = argIds_;
      if (((bitField0_ & 0x00000010) != 0)) {
        freeVarIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.freeVarIds_ = freeVarIds_;
      if (((bitField0_ & 0x00000020) != 0)) {
        retIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.retIds_ = retIds_;
    }

    private void buildPartial0(Function result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.signature_ = signatureBuilder_ == null
            ? signature_
            : signatureBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.isIgnore_ = isIgnore_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Function) {
        return mergeFrom((Function)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Function other) {
      if (other == Function.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (variablesBuilder_ == null) {
        if (!other.variables_.isEmpty()) {
          if (variables_.isEmpty()) {
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureVariablesIsMutable();
            variables_.addAll(other.variables_);
          }
          onChanged();
        }
      } else {
        if (!other.variables_.isEmpty()) {
          if (variablesBuilder_.isEmpty()) {
            variablesBuilder_.dispose();
            variablesBuilder_ = null;
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000002);
            variablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariablesFieldBuilder() : null;
          } else {
            variablesBuilder_.addAllMessages(other.variables_);
          }
        }
      }
      if (statementsBuilder_ == null) {
        if (!other.statements_.isEmpty()) {
          if (statements_.isEmpty()) {
            statements_ = other.statements_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStatementsIsMutable();
            statements_.addAll(other.statements_);
          }
          onChanged();
        }
      } else {
        if (!other.statements_.isEmpty()) {
          if (statementsBuilder_.isEmpty()) {
            statementsBuilder_.dispose();
            statementsBuilder_ = null;
            statements_ = other.statements_;
            bitField0_ = (bitField0_ & ~0x00000004);
            statementsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStatementsFieldBuilder() : null;
          } else {
            statementsBuilder_.addAllMessages(other.statements_);
          }
        }
      }
      if (!other.argIds_.isEmpty()) {
        if (argIds_.isEmpty()) {
          argIds_ = other.argIds_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureArgIdsIsMutable();
          argIds_.addAll(other.argIds_);
        }
        onChanged();
      }
      if (!other.freeVarIds_.isEmpty()) {
        if (freeVarIds_.isEmpty()) {
          freeVarIds_ = other.freeVarIds_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureFreeVarIdsIsMutable();
          freeVarIds_.addAll(other.freeVarIds_);
        }
        onChanged();
      }
      if (!other.retIds_.isEmpty()) {
        if (retIds_.isEmpty()) {
          retIds_ = other.retIds_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureRetIdsIsMutable();
          retIds_.addAll(other.retIds_);
        }
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.hasSignature()) {
        mergeSignature(other.getSignature());
      }
      if (other.getIsIgnore() != false) {
        setIsIgnore(other.getIsIgnore());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              Function.Variable m =
                  input.readMessage(
                      Function.Variable.parser(),
                      extensionRegistry);
              if (variablesBuilder_ == null) {
                ensureVariablesIsMutable();
                variables_.add(m);
              } else {
                variablesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              Statement m =
                  input.readMessage(
                      Statement.parser(),
                      extensionRegistry);
              if (statementsBuilder_ == null) {
                ensureStatementsIsMutable();
                statements_.add(m);
              } else {
                statementsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 32: {
              int v = input.readInt32();
              ensureArgIdsIsMutable();
              argIds_.addInt(v);
              break;
            } // case 32
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureArgIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                argIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 34
            case 40: {
              int v = input.readInt32();
              ensureFreeVarIdsIsMutable();
              freeVarIds_.addInt(v);
              break;
            } // case 40
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureFreeVarIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                freeVarIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 42
            case 48: {
              int v = input.readInt32();
              ensureRetIdsIsMutable();
              retIds_.addInt(v);
              break;
            } // case 48
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRetIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                retIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 50
            case 66: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 66
            case 82: {
              input.readMessage(
                  getSignatureFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 82
            case 808: {
              isIgnore_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 808
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * qualified name
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * qualified name
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * qualified name
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * qualified name
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * qualified name
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<Function.Variable> variables_ =
      java.util.Collections.emptyList();
    private void ensureVariablesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        variables_ = new java.util.ArrayList<Function.Variable>(variables_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Function.Variable, Function.Variable.Builder, Function.VariableOrBuilder> variablesBuilder_;

    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public java.util.List<Function.Variable> getVariablesList() {
      if (variablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variables_);
      } else {
        return variablesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public int getVariablesCount() {
      if (variablesBuilder_ == null) {
        return variables_.size();
      } else {
        return variablesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Function.Variable getVariables(int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);
      } else {
        return variablesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder setVariables(
        int index, Function.Variable value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.set(index, value);
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder setVariables(
        int index, Function.Variable.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.set(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder addVariables(Function.Variable value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder addVariables(
        int index, Function.Variable value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(index, value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder addVariables(
        Function.Variable.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder addVariables(
        int index, Function.Variable.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder addAllVariables(
        java.lang.Iterable<? extends Function.Variable> values) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variables_);
        onChanged();
      } else {
        variablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder clearVariables() {
      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        variablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Builder removeVariables(int index) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.remove(index);
        onChanged();
      } else {
        variablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Function.Variable.Builder getVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Function.VariableOrBuilder getVariablesOrBuilder(
        int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);  } else {
        return variablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public java.util.List<? extends Function.VariableOrBuilder>
         getVariablesOrBuilderList() {
      if (variablesBuilder_ != null) {
        return variablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variables_);
      }
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Function.Variable.Builder addVariablesBuilder() {
      return getVariablesFieldBuilder().addBuilder(
          Function.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public Function.Variable.Builder addVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().addBuilder(
          index, Function.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * var_id is the index of variable in the array
     * </pre>
     *
     * <code>repeated .security.sast.codegraph.repopb.Function.Variable variables = 2;</code>
     */
    public java.util.List<Function.Variable.Builder>
         getVariablesBuilderList() {
      return getVariablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Function.Variable, Function.Variable.Builder, Function.VariableOrBuilder>
        getVariablesFieldBuilder() {
      if (variablesBuilder_ == null) {
        variablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Function.Variable, Function.Variable.Builder, Function.VariableOrBuilder>(
                variables_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        variables_ = null;
      }
      return variablesBuilder_;
    }

    private java.util.List<Statement> statements_ =
      java.util.Collections.emptyList();
    private void ensureStatementsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        statements_ = new java.util.ArrayList<Statement>(statements_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            Statement, Statement.Builder, StatementOrBuilder> statementsBuilder_;

    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public java.util.List<Statement> getStatementsList() {
      if (statementsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(statements_);
      } else {
        return statementsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public int getStatementsCount() {
      if (statementsBuilder_ == null) {
        return statements_.size();
      } else {
        return statementsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Statement getStatements(int index) {
      if (statementsBuilder_ == null) {
        return statements_.get(index);
      } else {
        return statementsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder setStatements(
        int index, Statement value) {
      if (statementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatementsIsMutable();
        statements_.set(index, value);
        onChanged();
      } else {
        statementsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder setStatements(
        int index, Statement.Builder builderForValue) {
      if (statementsBuilder_ == null) {
        ensureStatementsIsMutable();
        statements_.set(index, builderForValue.build());
        onChanged();
      } else {
        statementsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder addStatements(Statement value) {
      if (statementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatementsIsMutable();
        statements_.add(value);
        onChanged();
      } else {
        statementsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder addStatements(
        int index, Statement value) {
      if (statementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatementsIsMutable();
        statements_.add(index, value);
        onChanged();
      } else {
        statementsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder addStatements(
        Statement.Builder builderForValue) {
      if (statementsBuilder_ == null) {
        ensureStatementsIsMutable();
        statements_.add(builderForValue.build());
        onChanged();
      } else {
        statementsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder addStatements(
        int index, Statement.Builder builderForValue) {
      if (statementsBuilder_ == null) {
        ensureStatementsIsMutable();
        statements_.add(index, builderForValue.build());
        onChanged();
      } else {
        statementsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder addAllStatements(
        java.lang.Iterable<? extends Statement> values) {
      if (statementsBuilder_ == null) {
        ensureStatementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, statements_);
        onChanged();
      } else {
        statementsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder clearStatements() {
      if (statementsBuilder_ == null) {
        statements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        statementsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Builder removeStatements(int index) {
      if (statementsBuilder_ == null) {
        ensureStatementsIsMutable();
        statements_.remove(index);
        onChanged();
      } else {
        statementsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Statement.Builder getStatementsBuilder(
        int index) {
      return getStatementsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public StatementOrBuilder getStatementsOrBuilder(
        int index) {
      if (statementsBuilder_ == null) {
        return statements_.get(index);  } else {
        return statementsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public java.util.List<? extends StatementOrBuilder>
         getStatementsOrBuilderList() {
      if (statementsBuilder_ != null) {
        return statementsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(statements_);
      }
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Statement.Builder addStatementsBuilder() {
      return getStatementsFieldBuilder().addBuilder(
          Statement.getDefaultInstance());
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public Statement.Builder addStatementsBuilder(
        int index) {
      return getStatementsFieldBuilder().addBuilder(
          index, Statement.getDefaultInstance());
    }
    /**
     * <code>repeated .security.sast.codegraph.repopb.Statement statements = 3;</code>
     */
    public java.util.List<Statement.Builder>
         getStatementsBuilderList() {
      return getStatementsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
            Statement, Statement.Builder, StatementOrBuilder>
        getStatementsFieldBuilder() {
      if (statementsBuilder_ == null) {
        statementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                Statement, Statement.Builder, StatementOrBuilder>(
                statements_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        statements_ = null;
      }
      return statementsBuilder_;
    }

    private com.google.protobuf.Internal.IntList argIds_ = emptyIntList();
    private void ensureArgIdsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        argIds_ = mutableCopy(argIds_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @return A list containing the argIds.
     */
    public java.util.List<java.lang.Integer>
        getArgIdsList() {
      return ((bitField0_ & 0x00000008) != 0) ?
               java.util.Collections.unmodifiableList(argIds_) : argIds_;
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @return The count of argIds.
     */
    public int getArgIdsCount() {
      return argIds_.size();
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @param index The index of the element to return.
     * @return The argIds at the given index.
     */
    public int getArgIds(int index) {
      return argIds_.getInt(index);
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @param index The index to set the value at.
     * @param value The argIds to set.
     * @return This builder for chaining.
     */
    public Builder setArgIds(
        int index, int value) {

      ensureArgIdsIsMutable();
      argIds_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @param value The argIds to add.
     * @return This builder for chaining.
     */
    public Builder addArgIds(int value) {

      ensureArgIdsIsMutable();
      argIds_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @param values The argIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllArgIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureArgIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, argIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of parameters
     * </pre>
     *
     * <code>repeated int32 arg_ids = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearArgIds() {
      argIds_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList freeVarIds_ = emptyIntList();
    private void ensureFreeVarIdsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        freeVarIds_ = mutableCopy(freeVarIds_);
        bitField0_ |= 0x00000010;
      }
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @return A list containing the freeVarIds.
     */
    public java.util.List<java.lang.Integer>
        getFreeVarIdsList() {
      return ((bitField0_ & 0x00000010) != 0) ?
               java.util.Collections.unmodifiableList(freeVarIds_) : freeVarIds_;
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @return The count of freeVarIds.
     */
    public int getFreeVarIdsCount() {
      return freeVarIds_.size();
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @param index The index of the element to return.
     * @return The freeVarIds at the given index.
     */
    public int getFreeVarIds(int index) {
      return freeVarIds_.getInt(index);
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @param index The index to set the value at.
     * @param value The freeVarIds to set.
     * @return This builder for chaining.
     */
    public Builder setFreeVarIds(
        int index, int value) {

      ensureFreeVarIdsIsMutable();
      freeVarIds_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @param value The freeVarIds to add.
     * @return This builder for chaining.
     */
    public Builder addFreeVarIds(int value) {

      ensureFreeVarIdsIsMutable();
      freeVarIds_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @param values The freeVarIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllFreeVarIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureFreeVarIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, freeVarIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of free vars
     * </pre>
     *
     * <code>repeated int32 free_var_ids = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFreeVarIds() {
      freeVarIds_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList retIds_ = emptyIntList();
    private void ensureRetIdsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        retIds_ = mutableCopy(retIds_);
        bitField0_ |= 0x00000020;
      }
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @return A list containing the retIds.
     */
    public java.util.List<java.lang.Integer>
        getRetIdsList() {
      return ((bitField0_ & 0x00000020) != 0) ?
               java.util.Collections.unmodifiableList(retIds_) : retIds_;
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @return The count of retIds.
     */
    public int getRetIdsCount() {
      return retIds_.size();
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @param index The index of the element to return.
     * @return The retIds at the given index.
     */
    public int getRetIds(int index) {
      return retIds_.getInt(index);
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @param index The index to set the value at.
     * @param value The retIds to set.
     * @return This builder for chaining.
     */
    public Builder setRetIds(
        int index, int value) {

      ensureRetIdsIsMutable();
      retIds_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @param value The retIds to add.
     * @return This builder for chaining.
     */
    public Builder addRetIds(int value) {

      ensureRetIdsIsMutable();
      retIds_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @param values The retIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllRetIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRetIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, retIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * local id of return
     * </pre>
     *
     * <code>repeated int32 ret_ids = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearRetIds() {
      retIds_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 8;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 8;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 8;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <code>string name = 8;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private FuncSignature signature_;
    private com.google.protobuf.SingleFieldBuilderV3<
            FuncSignature, FuncSignature.Builder, FuncSignatureOrBuilder> signatureBuilder_;
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     * @return Whether the signature field is set.
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     * @return The signature.
     */
    public FuncSignature getSignature() {
      if (signatureBuilder_ == null) {
        return signature_ == null ? FuncSignature.getDefaultInstance() : signature_;
      } else {
        return signatureBuilder_.getMessage();
      }
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    public Builder setSignature(FuncSignature value) {
      if (signatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signature_ = value;
      } else {
        signatureBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    public Builder setSignature(
        FuncSignature.Builder builderForValue) {
      if (signatureBuilder_ == null) {
        signature_ = builderForValue.build();
      } else {
        signatureBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    public Builder mergeSignature(FuncSignature value) {
      if (signatureBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          signature_ != null &&
          signature_ != FuncSignature.getDefaultInstance()) {
          getSignatureBuilder().mergeFrom(value);
        } else {
          signature_ = value;
        }
      } else {
        signatureBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    public Builder clearSignature() {
      bitField0_ = (bitField0_ & ~0x00000080);
      signature_ = null;
      if (signatureBuilder_ != null) {
        signatureBuilder_.dispose();
        signatureBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    public FuncSignature.Builder getSignatureBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getSignatureFieldBuilder().getBuilder();
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    public FuncSignatureOrBuilder getSignatureOrBuilder() {
      if (signatureBuilder_ != null) {
        return signatureBuilder_.getMessageOrBuilder();
      } else {
        return signature_ == null ?
            FuncSignature.getDefaultInstance() : signature_;
      }
    }
    /**
     * <code>.security.sast.codegraph.repopb.FuncSignature signature = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            FuncSignature, FuncSignature.Builder, FuncSignatureOrBuilder>
        getSignatureFieldBuilder() {
      if (signatureBuilder_ == null) {
        signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                FuncSignature, FuncSignature.Builder, FuncSignatureOrBuilder>(
                getSignature(),
                getParentForChildren(),
                isClean());
        signature_ = null;
      }
      return signatureBuilder_;
    }

    private boolean isIgnore_ ;
    /**
     * <pre>
     * set to true if statements is not provided
     * </pre>
     *
     * <code>bool is_ignore = 101;</code>
     * @return The isIgnore.
     */
    @java.lang.Override
    public boolean getIsIgnore() {
      return isIgnore_;
    }
    /**
     * <pre>
     * set to true if statements is not provided
     * </pre>
     *
     * <code>bool is_ignore = 101;</code>
     * @param value The isIgnore to set.
     * @return This builder for chaining.
     */
    public Builder setIsIgnore(boolean value) {

      isIgnore_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * set to true if statements is not provided
     * </pre>
     *
     * <code>bool is_ignore = 101;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsIgnore() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isIgnore_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:security.sast.codegraph.repopb.Function)
  }

  // @@protoc_insertion_point(class_scope:security.sast.codegraph.repopb.Function)
  private static final Function DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Function();
  }

  public static Function getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Function>
      PARSER = new com.google.protobuf.AbstractParser<Function>() {
    @java.lang.Override
    public Function parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Function> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Function> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public Function getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

