// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stmt.proto

package org.example.core.hook.bytedance.proto;

/**
 * <pre>
 * Call rets = func(args)
 * </pre>
 *
 * Protobuf type {@code security.sast.codegraph.repopb.Call}
 */
public final class Call extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:security.sast.codegraph.repopb.Call)
    CallOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Call.newBuilder() to construct.
  private Call(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Call() {
    argIds_ = emptyIntList();
    retIds_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Call();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CodeGraphStatement.internal_static_security_sast_codegraph_repopb_Call_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CodeGraphStatement.internal_static_security_sast_codegraph_repopb_Call_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Call.class, Call.Builder.class);
  }

  private int refCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object ref_;
  public enum RefCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    STATIC_FUNC_NAME(9),
    DYNAMIC_FUNC_ID(10),
    INVOKE_METHOD_NAME(11),
    REF_NOT_SET(0);
    private final int value;
    private RefCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RefCase valueOf(int value) {
      return forNumber(value);
    }

    public static RefCase forNumber(int value) {
      switch (value) {
        case 9: return STATIC_FUNC_NAME;
        case 10: return DYNAMIC_FUNC_ID;
        case 11: return INVOKE_METHOD_NAME;
        case 0: return REF_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RefCase
  getRefCase() {
    return RefCase.forNumber(
        refCase_);
  }

  public static final int ARG_IDS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList argIds_;
  /**
   * <code>repeated int32 arg_ids = 2;</code>
   * @return A list containing the argIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getArgIdsList() {
    return argIds_;
  }
  /**
   * <code>repeated int32 arg_ids = 2;</code>
   * @return The count of argIds.
   */
  public int getArgIdsCount() {
    return argIds_.size();
  }
  /**
   * <code>repeated int32 arg_ids = 2;</code>
   * @param index The index of the element to return.
   * @return The argIds at the given index.
   */
  public int getArgIds(int index) {
    return argIds_.getInt(index);
  }
  private int argIdsMemoizedSerializedSize = -1;

  public static final int RET_IDS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList retIds_;
  /**
   * <code>repeated int32 ret_ids = 4;</code>
   * @return A list containing the retIds.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getRetIdsList() {
    return retIds_;
  }
  /**
   * <code>repeated int32 ret_ids = 4;</code>
   * @return The count of retIds.
   */
  public int getRetIdsCount() {
    return retIds_.size();
  }
  /**
   * <code>repeated int32 ret_ids = 4;</code>
   * @param index The index of the element to return.
   * @return The retIds at the given index.
   */
  public int getRetIds(int index) {
    return retIds_.getInt(index);
  }
  private int retIdsMemoizedSerializedSize = -1;

  public static final int STATIC_FUNC_NAME_FIELD_NUMBER = 9;
  /**
   * <code>string static_func_name = 9;</code>
   * @return Whether the staticFuncName field is set.
   */
  public boolean hasStaticFuncName() {
    return refCase_ == 9;
  }
  /**
   * <code>string static_func_name = 9;</code>
   * @return The staticFuncName.
   */
  public java.lang.String getStaticFuncName() {
    java.lang.Object ref = "";
    if (refCase_ == 9) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (refCase_ == 9) {
        ref_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string static_func_name = 9;</code>
   * @return The bytes for staticFuncName.
   */
  public com.google.protobuf.ByteString
      getStaticFuncNameBytes() {
    java.lang.Object ref = "";
    if (refCase_ == 9) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (refCase_ == 9) {
        ref_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DYNAMIC_FUNC_ID_FIELD_NUMBER = 10;
  /**
   * <code>int32 dynamic_func_id = 10;</code>
   * @return Whether the dynamicFuncId field is set.
   */
  @java.lang.Override
  public boolean hasDynamicFuncId() {
    return refCase_ == 10;
  }
  /**
   * <code>int32 dynamic_func_id = 10;</code>
   * @return The dynamicFuncId.
   */
  @java.lang.Override
  public int getDynamicFuncId() {
    if (refCase_ == 10) {
      return (java.lang.Integer) ref_;
    }
    return 0;
  }

  public static final int INVOKE_METHOD_NAME_FIELD_NUMBER = 11;
  /**
   * <code>string invoke_method_name = 11;</code>
   * @return Whether the invokeMethodName field is set.
   */
  public boolean hasInvokeMethodName() {
    return refCase_ == 11;
  }
  /**
   * <code>string invoke_method_name = 11;</code>
   * @return The invokeMethodName.
   */
  public java.lang.String getInvokeMethodName() {
    java.lang.Object ref = "";
    if (refCase_ == 11) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (refCase_ == 11) {
        ref_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string invoke_method_name = 11;</code>
   * @return The bytes for invokeMethodName.
   */
  public com.google.protobuf.ByteString
      getInvokeMethodNameBytes() {
    java.lang.Object ref = "";
    if (refCase_ == 11) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (refCase_ == 11) {
        ref_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getArgIdsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(argIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < argIds_.size(); i++) {
      output.writeInt32NoTag(argIds_.getInt(i));
    }
    if (getRetIdsList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(retIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < retIds_.size(); i++) {
      output.writeInt32NoTag(retIds_.getInt(i));
    }
    if (refCase_ == 9) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, ref_);
    }
    if (refCase_ == 10) {
      output.writeInt32(
          10, (int)((java.lang.Integer) ref_));
    }
    if (refCase_ == 11) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, ref_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < argIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(argIds_.getInt(i));
      }
      size += dataSize;
      if (!getArgIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      argIdsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < retIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(retIds_.getInt(i));
      }
      size += dataSize;
      if (!getRetIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      retIdsMemoizedSerializedSize = dataSize;
    }
    if (refCase_ == 9) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, ref_);
    }
    if (refCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            10, (int)((java.lang.Integer) ref_));
    }
    if (refCase_ == 11) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, ref_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Call)) {
      return super.equals(obj);
    }
    Call other = (Call) obj;

    if (!getArgIdsList()
        .equals(other.getArgIdsList())) return false;
    if (!getRetIdsList()
        .equals(other.getRetIdsList())) return false;
    if (!getRefCase().equals(other.getRefCase())) return false;
    switch (refCase_) {
      case 9:
        if (!getStaticFuncName()
            .equals(other.getStaticFuncName())) return false;
        break;
      case 10:
        if (getDynamicFuncId()
            != other.getDynamicFuncId()) return false;
        break;
      case 11:
        if (!getInvokeMethodName()
            .equals(other.getInvokeMethodName())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getArgIdsCount() > 0) {
      hash = (37 * hash) + ARG_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getArgIdsList().hashCode();
    }
    if (getRetIdsCount() > 0) {
      hash = (37 * hash) + RET_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getRetIdsList().hashCode();
    }
    switch (refCase_) {
      case 9:
        hash = (37 * hash) + STATIC_FUNC_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getStaticFuncName().hashCode();
        break;
      case 10:
        hash = (37 * hash) + DYNAMIC_FUNC_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDynamicFuncId();
        break;
      case 11:
        hash = (37 * hash) + INVOKE_METHOD_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getInvokeMethodName().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Call parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Call parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Call parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Call parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Call parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Call parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Call parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Call parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Call parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static Call parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Call parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Call parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Call prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Call rets = func(args)
   * </pre>
   *
   * Protobuf type {@code security.sast.codegraph.repopb.Call}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:security.sast.codegraph.repopb.Call)
          CallOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CodeGraphStatement.internal_static_security_sast_codegraph_repopb_Call_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CodeGraphStatement.internal_static_security_sast_codegraph_repopb_Call_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Call.class, Call.Builder.class);
    }

    // Construct using org.example.core.processor.bytedance.proto.Call.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      argIds_ = emptyIntList();
      retIds_ = emptyIntList();
      refCase_ = 0;
      ref_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CodeGraphStatement.internal_static_security_sast_codegraph_repopb_Call_descriptor;
    }

    @java.lang.Override
    public Call getDefaultInstanceForType() {
      return Call.getDefaultInstance();
    }

    @java.lang.Override
    public Call build() {
      Call result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public Call buildPartial() {
      Call result = new Call(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(Call result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        argIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.argIds_ = argIds_;
      if (((bitField0_ & 0x00000002) != 0)) {
        retIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.retIds_ = retIds_;
    }

    private void buildPartial0(Call result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(Call result) {
      result.refCase_ = refCase_;
      result.ref_ = this.ref_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Call) {
        return mergeFrom((Call)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Call other) {
      if (other == Call.getDefaultInstance()) return this;
      if (!other.argIds_.isEmpty()) {
        if (argIds_.isEmpty()) {
          argIds_ = other.argIds_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureArgIdsIsMutable();
          argIds_.addAll(other.argIds_);
        }
        onChanged();
      }
      if (!other.retIds_.isEmpty()) {
        if (retIds_.isEmpty()) {
          retIds_ = other.retIds_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureRetIdsIsMutable();
          retIds_.addAll(other.retIds_);
        }
        onChanged();
      }
      switch (other.getRefCase()) {
        case STATIC_FUNC_NAME: {
          refCase_ = 9;
          ref_ = other.ref_;
          onChanged();
          break;
        }
        case DYNAMIC_FUNC_ID: {
          setDynamicFuncId(other.getDynamicFuncId());
          break;
        }
        case INVOKE_METHOD_NAME: {
          refCase_ = 11;
          ref_ = other.ref_;
          onChanged();
          break;
        }
        case REF_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              int v = input.readInt32();
              ensureArgIdsIsMutable();
              argIds_.addInt(v);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureArgIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                argIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 18
            case 32: {
              int v = input.readInt32();
              ensureRetIdsIsMutable();
              retIds_.addInt(v);
              break;
            } // case 32
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRetIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                retIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 34
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              refCase_ = 9;
              ref_ = s;
              break;
            } // case 74
            case 80: {
              ref_ = input.readInt32();
              refCase_ = 10;
              break;
            } // case 80
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();
              refCase_ = 11;
              ref_ = s;
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int refCase_ = 0;
    private java.lang.Object ref_;
    public RefCase
        getRefCase() {
      return RefCase.forNumber(
          refCase_);
    }

    public Builder clearRef() {
      refCase_ = 0;
      ref_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.Internal.IntList argIds_ = emptyIntList();
    private void ensureArgIdsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        argIds_ = mutableCopy(argIds_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @return A list containing the argIds.
     */
    public java.util.List<java.lang.Integer>
        getArgIdsList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(argIds_) : argIds_;
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @return The count of argIds.
     */
    public int getArgIdsCount() {
      return argIds_.size();
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The argIds at the given index.
     */
    public int getArgIds(int index) {
      return argIds_.getInt(index);
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @param index The index to set the value at.
     * @param value The argIds to set.
     * @return This builder for chaining.
     */
    public Builder setArgIds(
        int index, int value) {

      ensureArgIdsIsMutable();
      argIds_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @param value The argIds to add.
     * @return This builder for chaining.
     */
    public Builder addArgIds(int value) {

      ensureArgIdsIsMutable();
      argIds_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @param values The argIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllArgIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureArgIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, argIds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 arg_ids = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearArgIds() {
      argIds_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList retIds_ = emptyIntList();
    private void ensureRetIdsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        retIds_ = mutableCopy(retIds_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @return A list containing the retIds.
     */
    public java.util.List<java.lang.Integer>
        getRetIdsList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(retIds_) : retIds_;
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @return The count of retIds.
     */
    public int getRetIdsCount() {
      return retIds_.size();
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @param index The index of the element to return.
     * @return The retIds at the given index.
     */
    public int getRetIds(int index) {
      return retIds_.getInt(index);
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @param index The index to set the value at.
     * @param value The retIds to set.
     * @return This builder for chaining.
     */
    public Builder setRetIds(
        int index, int value) {

      ensureRetIdsIsMutable();
      retIds_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @param value The retIds to add.
     * @return This builder for chaining.
     */
    public Builder addRetIds(int value) {

      ensureRetIdsIsMutable();
      retIds_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @param values The retIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllRetIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRetIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, retIds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 ret_ids = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRetIds() {
      retIds_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     * <code>string static_func_name = 9;</code>
     * @return Whether the staticFuncName field is set.
     */
    @java.lang.Override
    public boolean hasStaticFuncName() {
      return refCase_ == 9;
    }
    /**
     * <code>string static_func_name = 9;</code>
     * @return The staticFuncName.
     */
    @java.lang.Override
    public java.lang.String getStaticFuncName() {
      java.lang.Object ref = "";
      if (refCase_ == 9) {
        ref = ref_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (refCase_ == 9) {
          ref_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string static_func_name = 9;</code>
     * @return The bytes for staticFuncName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStaticFuncNameBytes() {
      java.lang.Object ref = "";
      if (refCase_ == 9) {
        ref = ref_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (refCase_ == 9) {
          ref_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string static_func_name = 9;</code>
     * @param value The staticFuncName to set.
     * @return This builder for chaining.
     */
    public Builder setStaticFuncName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      refCase_ = 9;
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string static_func_name = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearStaticFuncName() {
      if (refCase_ == 9) {
        refCase_ = 0;
        ref_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string static_func_name = 9;</code>
     * @param value The bytes for staticFuncName to set.
     * @return This builder for chaining.
     */
    public Builder setStaticFuncNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      refCase_ = 9;
      ref_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>int32 dynamic_func_id = 10;</code>
     * @return Whether the dynamicFuncId field is set.
     */
    public boolean hasDynamicFuncId() {
      return refCase_ == 10;
    }
    /**
     * <code>int32 dynamic_func_id = 10;</code>
     * @return The dynamicFuncId.
     */
    public int getDynamicFuncId() {
      if (refCase_ == 10) {
        return (java.lang.Integer) ref_;
      }
      return 0;
    }
    /**
     * <code>int32 dynamic_func_id = 10;</code>
     * @param value The dynamicFuncId to set.
     * @return This builder for chaining.
     */
    public Builder setDynamicFuncId(int value) {

      refCase_ = 10;
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 dynamic_func_id = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearDynamicFuncId() {
      if (refCase_ == 10) {
        refCase_ = 0;
        ref_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>string invoke_method_name = 11;</code>
     * @return Whether the invokeMethodName field is set.
     */
    @java.lang.Override
    public boolean hasInvokeMethodName() {
      return refCase_ == 11;
    }
    /**
     * <code>string invoke_method_name = 11;</code>
     * @return The invokeMethodName.
     */
    @java.lang.Override
    public java.lang.String getInvokeMethodName() {
      java.lang.Object ref = "";
      if (refCase_ == 11) {
        ref = ref_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (refCase_ == 11) {
          ref_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string invoke_method_name = 11;</code>
     * @return The bytes for invokeMethodName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInvokeMethodNameBytes() {
      java.lang.Object ref = "";
      if (refCase_ == 11) {
        ref = ref_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (refCase_ == 11) {
          ref_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string invoke_method_name = 11;</code>
     * @param value The invokeMethodName to set.
     * @return This builder for chaining.
     */
    public Builder setInvokeMethodName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      refCase_ = 11;
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string invoke_method_name = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvokeMethodName() {
      if (refCase_ == 11) {
        refCase_ = 0;
        ref_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string invoke_method_name = 11;</code>
     * @param value The bytes for invokeMethodName to set.
     * @return This builder for chaining.
     */
    public Builder setInvokeMethodNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      refCase_ = 11;
      ref_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:security.sast.codegraph.repopb.Call)
  }

  // @@protoc_insertion_point(class_scope:security.sast.codegraph.repopb.Call)
  private static final Call DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Call();
  }

  public static Call getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Call>
      PARSER = new com.google.protobuf.AbstractParser<Call>() {
    @java.lang.Override
    public Call parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Call> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Call> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public Call getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

