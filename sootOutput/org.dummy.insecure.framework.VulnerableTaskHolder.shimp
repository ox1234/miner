public class org.dummy.insecure.framework.VulnerableTaskHolder extends java.lang.Object implements java.io.Serializable
{
    private static final org.slf4j.Logger log;
    private static final long serialVersionUID;
    private java.lang.String taskName;
    private java.lang.String taskAction;
    private java.time.LocalDateTime requestedExecutionTime;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.time.LocalDateTime $r3;
        org.dummy.insecure.framework.VulnerableTaskHolder r0;
        java.lang.String r1, r2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.taskName = r1;

        r0.taskAction = r2;

        $r3 = staticinvoke java.time.LocalDateTime.now();

        r0.requestedExecutionTime = $r3;

        return;
    }

    public java.lang.String toString()
    {
        java.time.LocalDateTime $r1;
        org.dummy.insecure.framework.VulnerableTaskHolder r0;
        java.lang.String $r2, $r3, $r4;

        r0 := @this;

        $r3 = r0.taskName;

        $r2 = r0.taskAction;

        $r1 = r0.requestedExecutionTime;

        $r4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.time.LocalDateTime)>($r3, $r2, $r1) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("VulnerableTaskHolder [taskName=\u0001, taskAction=\u0001, requestedExecutionTime=\u0001]");

        return $r4;
    }

    private void readObject(java.io.ObjectInputStream) throws java.lang.Exception
    {
        java.io.ObjectInputStream r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Process $r13;
        java.lang.Runtime $r11;
        java.lang.Throwable $r28;
        java.time.LocalDateTime $r4, $r6, $r20, $r21, $r22, $r26, $r27;
        int $i0;
        org.dummy.insecure.framework.VulnerableTaskHolder r1;
        java.lang.String $r2, $r7, $r8, $r9, $r12, $r17, $r19, $r24;
        org.slf4j.Logger $r3, $r5, $r10, $r18, $r23, $r29;
        java.lang.IllegalArgumentException $r25;
        java.io.InputStreamReader $r15;
        java.io.BufferedReader $r14;
        java.io.InputStream $r16;

        r1 := @this;

        r0 := @parameter0;

        virtualinvoke r0.defaultReadObject();

        $r3 = org.dummy.insecure.framework.VulnerableTaskHolder.log;

        $r2 = r1.taskName;

        interfaceinvoke $r3.info("restoring task: {}", $r2);

        $r5 = org.dummy.insecure.framework.VulnerableTaskHolder.log;

        $r4 = r1.requestedExecutionTime;

        interfaceinvoke $r5.info("restoring time: {}", $r4);

        $r6 = r1.requestedExecutionTime;

        if $r6 == null goto label2;

        $r20 = r1.requestedExecutionTime;

        $r21 = staticinvoke java.time.LocalDateTime.now();

        $r22 = virtualinvoke $r21.minusMinutes(10L);

        $z2 = virtualinvoke $r20.isBefore($r22);

        if $z2 != 0 goto label1;

        $r26 = r1.requestedExecutionTime;

        $r27 = staticinvoke java.time.LocalDateTime.now();

        $z3 = virtualinvoke $r26.isAfter($r27);

        if $z3 == 0 goto label2;

     label1:
        $r23 = org.dummy.insecure.framework.VulnerableTaskHolder.log;

        $r24 = virtualinvoke r1.toString();

        interfaceinvoke $r23.debug($r24);

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<init>("outdated");

        throw $r25;

     label2:
        $r7 = r1.taskAction;

        $z0 = virtualinvoke $r7.startsWith("sleep");

        if $z0 != 0 goto label3;

        $r19 = r1.taskAction;

        $z1 = virtualinvoke $r19.startsWith("ping");

        if $z1 == 0 goto label8;

     label3:
        $r8 = r1.taskAction;

        $i0 = virtualinvoke $r8.length();

        if $i0 >= 22 goto label8;

        $r10 = org.dummy.insecure.framework.VulnerableTaskHolder.log;

        $r9 = r1.taskAction;

        interfaceinvoke $r10.info("about to execute: {}", $r9);

     label4:
        $r11 = staticinvoke java.lang.Runtime.getRuntime();

        $r12 = r1.taskAction;

        $r13 = virtualinvoke $r11.exec($r12);

        $r14 = new java.io.BufferedReader;

        $r15 = new java.io.InputStreamReader;

        $r16 = virtualinvoke $r13.getInputStream();

        specialinvoke $r15.<init>($r16);

        specialinvoke $r14.<init>($r15);

     label5:
        $r17 = virtualinvoke $r14.readLine();

        if $r17 == null goto label6;

        $r18 = org.dummy.insecure.framework.VulnerableTaskHolder.log;

        interfaceinvoke $r18.info($r17);

        goto label5;

     label6:
        goto label8;

     label7:
        $r28 := @caughtexception;

        $r29 = org.dummy.insecure.framework.VulnerableTaskHolder.log;

        interfaceinvoke $r29.error("IO Exception", $r28);

     label8:
        return;

        catch java.io.IOException from label4 to label6 with label7;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke org.slf4j.LoggerFactory.getLogger(class "Lorg/dummy/insecure/framework/VulnerableTaskHolder;");

        org.dummy.insecure.framework.VulnerableTaskHolder.log = $r0;

        return;
    }
}
