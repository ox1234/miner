public class org.owasp.webgoat.lessons.logging.LogBleedingTask extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    org.slf4j.Logger log;
    private java.lang.String password;

    public void <init>()
    {
        org.slf4j.Logger $r3;
        java.lang.Class $r1;
        java.lang.String $r2;
        org.owasp.webgoat.lessons.logging.LogBleedingTask r0;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = virtualinvoke r0.getClass();

        $r2 = virtualinvoke $r1.getName();

        $r3 = staticinvoke org.slf4j.LoggerFactory.getLogger($r2);

        r0.log = $r3;

        return;
    }

    public void generatePassword()
    {
        byte[] $r7;
        org.slf4j.Logger $r3;
        java.util.Base64$Encoder $r4;
        java.util.UUID $r1;
        org.owasp.webgoat.lessons.logging.LogBleedingTask r0;
        java.nio.charset.Charset $r5;
        java.lang.String $r2, $r6, $r8;

        r0 := @this;

        $r1 = staticinvoke java.util.UUID.randomUUID();

        $r2 = virtualinvoke $r1.toString();

        r0.password = $r2;

        $r3 = r0.log;

        $r4 = staticinvoke java.util.Base64.getEncoder();

        $r6 = r0.password;

        $r5 = java.nio.charset.StandardCharsets.UTF_8;

        $r7 = virtualinvoke $r6.getBytes($r5);

        $r8 = virtualinvoke $r4.encodeToString($r7);

        interfaceinvoke $r3.info("Password for admin: {}", $r8);

        return;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String, java.lang.String)
    {
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r2, $r3, $r6, $r9;
        org.owasp.webgoat.lessons.logging.LogBleedingTask r1;
        org.owasp.webgoat.container.assignments.AttackResult $r4, $r7, $r10;
        java.lang.String r0, r5, $r8;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this;

        r0 := @parameter0;

        r5 := @parameter1;

        $z0 = staticinvoke org.apache.logging.log4j.util.Strings.isEmpty(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke org.apache.logging.log4j.util.Strings.isEmpty(r5);

        if $z1 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r1.failed(r1);

        $r3 = virtualinvoke $r2.output("Please provide username (Admin) and password");

        $r4 = virtualinvoke $r3.build();

        return $r4;

     label2:
        $z2 = virtualinvoke r0.equals("Admin");

        if $z2 == 0 goto label3;

        $r8 = r1.password;

        $z3 = virtualinvoke r5.equals($r8);

        if $z3 == 0 goto label3;

        $r9 = virtualinvoke r1.success(r1);

        $r10 = virtualinvoke $r9.build();

        return $r10;

     label3:
        $r6 = virtualinvoke r1.failed(r1);

        $r7 = virtualinvoke $r6.build();

        return $r7;
    }
}
