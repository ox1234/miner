public class org.owasp.webgoat.webwolf.requests.Requests extends java.lang.Object
{
    private static final org.slf4j.Logger log;
    private final org.owasp.webgoat.webwolf.requests.WebWolfTraceRepository traceRepository;
    private final com.fasterxml.jackson.databind.ObjectMapper objectMapper;

    public org.springframework.web.servlet.ModelAndView get()
    {
        java.util.function.Function $r11;
        org.springframework.security.core.userdetails.UserDetails r4;
        org.owasp.webgoat.webwolf.requests.WebWolfTraceRepository $r6;
        java.util.stream.Collector $r13;
        java.util.function.Predicate $r9;
        org.owasp.webgoat.webwolf.requests.Requests r5;
        org.springframework.web.servlet.ModelAndView $r0;
        java.util.List $r7, r15;
        java.util.stream.Stream $r8, $r10, $r12;
        org.springframework.security.core.context.SecurityContext $r1;
        java.lang.Object $r3, $r14;
        org.springframework.security.core.Authentication $r2;

        r5 := @this;

        $r0 = new org.springframework.web.servlet.ModelAndView;

        specialinvoke $r0.<init>("requests");

        $r1 = staticinvoke org.springframework.security.core.context.SecurityContextHolder.getContext();

        $r2 = interfaceinvoke $r1.getAuthentication();

        $r3 = interfaceinvoke $r2.getPrincipal();

        r4 = (org.springframework.security.core.userdetails.UserDetails) $r3;

        $r6 = r5.traceRepository;

        $r7 = virtualinvoke $r6.findAllTraces();

        $r8 = interfaceinvoke $r7.stream();

        $r9 = staticinvoke org.owasp.webgoat.webwolf.requests.Requests$lambda_get_0__2.bootstrap$(r5, r4);

        $r10 = interfaceinvoke $r8.filter($r9);

        $r11 = staticinvoke org.owasp.webgoat.webwolf.requests.Requests$lambda_get_1__3.bootstrap$(r5);

        $r12 = interfaceinvoke $r10.map($r11);

        $r13 = staticinvoke java.util.stream.Collectors.toList();

        $r14 = interfaceinvoke $r12.collect($r13);

        r15 = (java.util.List) $r14;

        virtualinvoke $r0.addObject("traces", r15);

        return $r0;
    }

    private boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace, org.springframework.security.core.userdetails.UserDetails)
    {
        org.springframework.boot.actuate.trace.http.HttpTrace r0;
        org.springframework.boot.actuate.trace.http.HttpTrace$Request $r1;
        org.springframework.security.core.userdetails.UserDetails r12;
        java.net.URI $r2, $r4, $r6, $r8, $r10, $r15;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r14, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, z5, z5_1, z5_2, z5_3;
        org.owasp.webgoat.webwolf.requests.Requests r18;

        r18 := @this;

        r0 := @parameter0;

        r12 := @parameter1;

        $r1 = virtualinvoke r0.getRequest();

        z5 = 1;

        $r2 = virtualinvoke $r1.getUri();

        $r3 = virtualinvoke $r2.getPath();

        $z0 = virtualinvoke $r3.contains("/files");

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke $r1.getUri();

        $r16 = virtualinvoke $r15.getPath();

        $r17 = interfaceinvoke r12.getUsername();

        $z4 = virtualinvoke $r16.contains($r17);

        if $z4 != 0 goto label1;

        z5_1 = 0;

(0)     goto label2;

     label1:
        $r4 = virtualinvoke $r1.getUri();

        $r5 = virtualinvoke $r4.getPath();

        $z1 = virtualinvoke $r5.contains("/landing");

(1)     if $z1 == 0 goto label2;

        $r6 = virtualinvoke $r1.getUri();

        $r7 = virtualinvoke $r6.getQuery();

(2)     if $r7 == null goto label2;

        $r8 = virtualinvoke $r1.getUri();

        $r9 = virtualinvoke $r8.getQuery();

        $z2 = virtualinvoke $r9.contains("uniqueCode");

(3)     if $z2 == 0 goto label2;

        $r10 = virtualinvoke $r1.getUri();

        $r11 = virtualinvoke $r10.getQuery();

        $r13 = interfaceinvoke r12.getUsername();

        $r14 = staticinvoke org.apache.commons.lang3.StringUtils.reverse($r13);

        $z3 = virtualinvoke $r11.contains($r14);

(4)     if $z3 != 0 goto label2;

(5)     z5_2 = 0;

     label2:
        z5_3 = Phi(z5_1 #0, z5 #1, z5 #2, z5 #3, z5 #4, z5_2 #5);

        return z5_3;
    }

    private java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)
    {
        org.springframework.boot.actuate.trace.http.HttpTrace r0;
        org.springframework.boot.actuate.trace.http.HttpTrace$Request $r1;
        java.net.URI $r2;
        java.lang.String $r3;
        org.owasp.webgoat.webwolf.requests.Requests r4;

        r4 := @this;

        r0 := @parameter0;

        $r1 = virtualinvoke r0.getRequest();

        $r2 = virtualinvoke $r1.getUri();

        $r3 = virtualinvoke $r2.getPath();

        return $r3;
    }

    private java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)
    {
        org.springframework.boot.actuate.trace.http.HttpTrace r1;
        org.slf4j.Logger $r5;
        com.fasterxml.jackson.databind.ObjectMapper $r2;
        com.fasterxml.jackson.core.JsonProcessingException $r4;
        java.lang.String $r3;
        org.owasp.webgoat.webwolf.requests.Requests r0;

        r0 := @this;

        r1 := @parameter0;

     label1:
        $r2 = r0.objectMapper;

        $r3 = virtualinvoke $r2.writeValueAsString(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = org.owasp.webgoat.webwolf.requests.Requests.log;

        interfaceinvoke $r5.error("Unable to create json", $r4);

        return "No request(s) found";

        catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
    }

    public void <init>(org.owasp.webgoat.webwolf.requests.WebWolfTraceRepository, com.fasterxml.jackson.databind.ObjectMapper)
    {
        com.fasterxml.jackson.databind.ObjectMapper r2;
        org.owasp.webgoat.webwolf.requests.WebWolfTraceRepository r1;
        org.owasp.webgoat.webwolf.requests.Requests r0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.traceRepository = r1;

        r0.objectMapper = r2;

        return;
    }

    private org.owasp.webgoat.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)
    {
        org.springframework.boot.actuate.trace.http.HttpTrace r2;
        org.owasp.webgoat.webwolf.requests.Requests$Tracert $r0;
        java.lang.String $r4, $r5;
        org.owasp.webgoat.webwolf.requests.Requests r1;
        java.time.Instant $r3;

        r1 := @this;

        r2 := @parameter0;

        $r0 = new org.owasp.webgoat.webwolf.requests.Requests$Tracert;

        $r3 = virtualinvoke r2.getTimestamp();

        $r4 = virtualinvoke r1.path(r2);

        $r5 = virtualinvoke r1.toJsonString(r2);

        specialinvoke $r0.<init>(r1, $r3, $r4, $r5);

        return $r0;
    }

    private boolean lambda$get$0(org.springframework.security.core.userdetails.UserDetails, org.springframework.boot.actuate.trace.http.HttpTrace)
    {
        org.springframework.boot.actuate.trace.http.HttpTrace r1;
        org.springframework.security.core.userdetails.UserDetails r2;
        org.owasp.webgoat.webwolf.requests.Requests r0;
        boolean $z0;

        r0 := @this;

        r2 := @parameter0;

        r1 := @parameter1;

        $z0 = virtualinvoke r0.allowedTrace(r1, r2);

        return $z0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke org.slf4j.LoggerFactory.getLogger(class "Lorg/owasp/webgoat/webwolf/requests/Requests;");

        org.owasp.webgoat.webwolf.requests.Requests.log = $r0;

        return;
    }
}
