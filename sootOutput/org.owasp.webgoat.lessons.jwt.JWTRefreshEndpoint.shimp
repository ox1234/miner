public class org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    public static final java.lang.String PASSWORD;
    private static final java.lang.String JWT_PASSWORD;
    private static final java.util.List validRefreshTokens;

    public void <init>()
    {
        org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public org.springframework.http.ResponseEntity follow(java.util.Map)
    {
        org.springframework.http.ResponseEntity$BodyBuilder $r7, $r14;
        java.util.Map r0, $r11;
        java.lang.String r2, r4, $r5, $r9;
        boolean $z0, $z1;
        org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint r10;
        org.springframework.http.HttpStatus $r6, $r13;
        java.lang.Object $r1, $r3;
        org.springframework.http.ResponseEntity $r8, $r12, $r15;

        r10 := @this;

        r0 := @parameter0;

        if r0 != null goto label1;

        $r13 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r14 = staticinvoke org.springframework.http.ResponseEntity.status($r13);

        $r15 = interfaceinvoke $r14.build();

        return $r15;

     label1:
        $r1 = interfaceinvoke r0.get("user");

        r2 = (java.lang.String) $r1;

        $r3 = interfaceinvoke r0.get("password");

        r4 = (java.lang.String) $r3;

        $r5 = "Jerry";

        $z0 = virtualinvoke $r5.equalsIgnoreCase(r2);

        if $z0 == 0 goto label2;

        $r9 = "bm5nhSkxCXZkKRy4";

        $z1 = virtualinvoke $r9.equals(r4);

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke r10.createNewTokens(r2);

        $r12 = staticinvoke org.springframework.http.ResponseEntity.ok($r11);

        return $r12;

     label2:
        $r6 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r7 = staticinvoke org.springframework.http.ResponseEntity.status($r6);

        $r8 = interfaceinvoke $r7.build();

        return $r8;
    }

    private java.util.Map createNewTokens(java.lang.String)
    {
        java.util.Date $r3;
        java.util.HashMap $r0, $r10;
        long $l0, $l1, $l2;
        io.jsonwebtoken.JwtBuilder $r2, $r5, $r6, $r8;
        io.jsonwebtoken.SignatureAlgorithm $r7;
        java.lang.String r1, $r9, $r11;
        org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint r13;
        java.util.concurrent.TimeUnit $r4;
        java.util.List $r12;

        r13 := @this;

        r1 := @parameter0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<init>();

        interfaceinvoke $r0.put("admin", "false");

        interfaceinvoke $r0.put("user", r1);

        $r2 = staticinvoke io.jsonwebtoken.Jwts.builder();

        $r3 = new java.util.Date;

        $l0 = staticinvoke java.lang.System.currentTimeMillis();

        $r4 = java.util.concurrent.TimeUnit.DAYS;

        $l1 = virtualinvoke $r4.toDays(10L);

        $l2 = $l0 + $l1;

        specialinvoke $r3.<init>($l2);

        $r5 = interfaceinvoke $r2.setIssuedAt($r3);

        $r6 = interfaceinvoke $r5.setClaims($r0);

        $r7 = io.jsonwebtoken.SignatureAlgorithm.HS512;

        $r8 = interfaceinvoke $r6.signWith($r7, "bm5n3SkxCX4kKRy4");

        $r9 = interfaceinvoke $r8.compact();

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<init>();

        $r11 = staticinvoke org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(20);

        $r12 = org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.validRefreshTokens;

        interfaceinvoke $r12.add($r11);

        interfaceinvoke $r10.put("access_token", $r9);

        interfaceinvoke $r10.put("refresh_token", $r11);

        return $r10;
    }

    public org.springframework.http.ResponseEntity checkout(java.lang.String)
    {
        io.jsonwebtoken.JwtParser $r1, $r2;
        boolean $z0;
        org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint r10;
        org.owasp.webgoat.container.assignments.AttackResult $r15, $r18, $r26, $r32;
        io.jsonwebtoken.ExpiredJwtException $r28;
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r11, $r12, $r14, $r17, $r24, $r25, $r29, $r31;
        java.lang.Object[] $r13;
        org.springframework.http.ResponseEntity$BodyBuilder $r21;
        io.jsonwebtoken.Claims r6;
        io.jsonwebtoken.Jwt $r4;
        java.lang.String r0, $r3, r8, $r9, $r30;
        org.springframework.http.HttpStatus $r20;
        java.lang.Object $r5, $r7;
        org.springframework.http.ResponseEntity $r16, $r19, $r22, $r27, $r33;
        io.jsonwebtoken.JwtException $r23;

        r10 := @this;

        r0 := @parameter0;

        if r0 != null goto label1;

        $r20 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r21 = staticinvoke org.springframework.http.ResponseEntity.status($r20);

        $r22 = interfaceinvoke $r21.build();

        return $r22;

     label1:
        $r1 = staticinvoke io.jsonwebtoken.Jwts.parser();

        $r2 = interfaceinvoke $r1.setSigningKey("bm5n3SkxCX4kKRy4");

        $r3 = virtualinvoke r0.replace("Bearer ", "");

        $r4 = interfaceinvoke $r2.parse($r3);

        $r5 = interfaceinvoke $r4.getBody();

        r6 = (io.jsonwebtoken.Claims) $r5;

        $r7 = interfaceinvoke r6.get("user");

        r8 = (java.lang.String) $r7;

        $r9 = "Tom";

        $z0 = virtualinvoke $r9.equals(r8);

        if $z0 == 0 goto label3;

        $r17 = virtualinvoke r10.success(r10);

        $r18 = virtualinvoke $r17.build();

        $r19 = staticinvoke org.springframework.http.ResponseEntity.ok($r18);

     label2:
        return $r19;

     label3:
        $r11 = virtualinvoke r10.failed(r10);

        $r12 = virtualinvoke $r11.feedback("jwt-refresh-not-tom");

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r8;

        $r14 = virtualinvoke $r12.feedbackArgs($r13);

        $r15 = virtualinvoke $r14.build();

        $r16 = staticinvoke org.springframework.http.ResponseEntity.ok($r15);

     label4:
        return $r16;

     label5:
        $r28 := @caughtexception;

        $r29 = virtualinvoke r10.failed(r10);

        $r30 = virtualinvoke $r28.getMessage();

        $r31 = virtualinvoke $r29.output($r30);

        $r32 = virtualinvoke $r31.build();

        $r33 = staticinvoke org.springframework.http.ResponseEntity.ok($r32);

        return $r33;

     label6:
        $r23 := @caughtexception;

        $r24 = virtualinvoke r10.failed(r10);

        $r25 = virtualinvoke $r24.feedback("jwt-invalid-token");

        $r26 = virtualinvoke $r25.build();

        $r27 = staticinvoke org.springframework.http.ResponseEntity.ok($r26);

        return $r27;

        catch io.jsonwebtoken.ExpiredJwtException from label1 to label2 with label5;
        catch io.jsonwebtoken.ExpiredJwtException from label3 to label4 with label5;
        catch io.jsonwebtoken.JwtException from label1 to label2 with label6;
        catch io.jsonwebtoken.JwtException from label3 to label4 with label6;
    }

    public org.springframework.http.ResponseEntity newToken(java.lang.String, java.util.Map)
    {
        io.jsonwebtoken.JwtParser $r5, $r6;
        java.util.Map r4, $r22;
        boolean $z0;
        org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint r21;
        java.util.List $r16, $r20;
        io.jsonwebtoken.ExpiredJwtException $r24;
        org.springframework.http.ResponseEntity$BodyBuilder $r2, $r14, $r18;
        io.jsonwebtoken.Claims $r10, $r25;
        io.jsonwebtoken.Jwt $r8;
        java.lang.String r0, $r7, r28, r29, r28_1, r28_2, r29_1, r29_2, r28_3;
        org.springframework.http.HttpStatus $r1, $r13, $r17;
        org.springframework.http.ResponseEntity $r3, $r15, $r19, $r23;
        java.lang.Object $r9, $r11, $r12, $r26, $r27;

        r21 := @this;

        r0 := @parameter0;

        r4 := @parameter1;

        if r0 == null goto label1;

(0)     if r4 != null goto label2;

     label1:
        $r1 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r2 = staticinvoke org.springframework.http.ResponseEntity.status($r1);

        $r3 = interfaceinvoke $r2.build();

        return $r3;

     label2:
        $r5 = staticinvoke io.jsonwebtoken.Jwts.parser();

        $r6 = interfaceinvoke $r5.setSigningKey("bm5n3SkxCX4kKRy4");

        $r7 = virtualinvoke r0.replace("Bearer ", "");

        $r8 = interfaceinvoke $r6.parse($r7);

        $r9 = interfaceinvoke $r8.getBody();

        $r10 = (io.jsonwebtoken.Claims) $r9;

        $r11 = interfaceinvoke $r10.get("user");

        r28 = (java.lang.String) $r11;

        $r12 = interfaceinvoke r4.get("refresh_token");

        r29 = (java.lang.String) $r12;

     label3:
(1)     goto label5;

     label4:
        $r24 := @caughtexception;

        r28_1 = Phi(r28 #0);

        $r25 = virtualinvoke $r24.getClaims();

        $r26 = interfaceinvoke $r25.get("user");

        r28_2 = (java.lang.String) $r26;

        $r27 = interfaceinvoke r4.get("refresh_token");

(2)     r29_1 = (java.lang.String) $r27;

     label5:
        r29_2 = Phi(r29 #1, r29_1 #2);

        r28_3 = Phi(r28 #1, r28_2 #2);

        if r28_3 == null goto label6;

        if r29_2 != null goto label7;

     label6:
        $r13 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r14 = staticinvoke org.springframework.http.ResponseEntity.status($r13);

        $r15 = interfaceinvoke $r14.build();

        return $r15;

     label7:
        $r16 = org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.validRefreshTokens;

        $z0 = interfaceinvoke $r16.contains(r29_2);

        if $z0 == 0 goto label8;

        $r20 = org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.validRefreshTokens;

        interfaceinvoke $r20.remove(r29_2);

        $r22 = virtualinvoke r21.createNewTokens(r28_3);

        $r23 = staticinvoke org.springframework.http.ResponseEntity.ok($r22);

        return $r23;

     label8:
        $r17 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r18 = staticinvoke org.springframework.http.ResponseEntity.status($r17);

        $r19 = interfaceinvoke $r18.build();

        return $r19;

        catch io.jsonwebtoken.ExpiredJwtException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<init>();

        org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.validRefreshTokens = $r0;

        return;
    }
}
