public class org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    public static final java.lang.String JWT_PASSWORD;
    private static java.lang.String validUsers;
    private static int totalVotes;
    private java.util.Map votes;

    public void <init>()
    {
        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint r0;
        java.util.HashMap $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<init>();

        r0.votes = $r1;

        return;
    }

    public void initVotes()
    {
        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint r0;
        org.owasp.webgoat.lessons.jwt.votes.Vote $r9, $r10, $r11, $r12;
        java.util.Map $r2, $r4, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i5;

        r0 := @this;

        $r2 = r0.votes;

        $r9 = new org.owasp.webgoat.lessons.jwt.votes.Vote;

        $i0 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.totalVotes;

        $i5 = (int) 36000;

        specialinvoke $r9.<init>("Admin lost password", "In this challenge you will need to help the admin and find the password in order to login", "challenge1-small.png", "challenge1.png", $i5, $i0);

        interfaceinvoke $r2.put("Admin lost password", $r9);

        $r4 = r0.votes;

        $r10 = new org.owasp.webgoat.lessons.jwt.votes.Vote;

        $i1 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.totalVotes;

        specialinvoke $r10.<init>("Vote for your favourite", "In this challenge ...", "challenge5-small.png", "challenge5.png", 30000, $i1);

        interfaceinvoke $r4.put("Vote for your favourite", $r10);

        $r6 = r0.votes;

        $r11 = new org.owasp.webgoat.lessons.jwt.votes.Vote;

        $i2 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.totalVotes;

        specialinvoke $r11.<init>("Get it for free", "The objective for this challenge is to buy a Samsung phone for free.", "challenge2-small.png", "challenge2.png", 20000, $i2);

        interfaceinvoke $r6.put("Get it for free", $r11);

        $r8 = r0.votes;

        $r12 = new org.owasp.webgoat.lessons.jwt.votes.Vote;

        $i3 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.totalVotes;

        specialinvoke $r12.<init>("Photo comments", "n this challenge you can comment on the photo you will need to find the flag somewhere.", "challenge3-small.png", "challenge3.png", 10000, $i3);

        interfaceinvoke $r8.put("Photo comments", $r12);

        return;
    }

    public void login(java.lang.String, javax.servlet.http.HttpServletResponse)
    {
        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint r19;
        java.util.Date $r9;
        io.jsonwebtoken.Claims $r5, $r10;
        java.time.Duration $r7;
        io.jsonwebtoken.JwtBuilder $r11, $r12, $r15;
        int $i0, $i1;
        io.jsonwebtoken.SignatureAlgorithm $r14;
        java.lang.String r0, $r1, $r13, $r16;
        javax.servlet.http.Cookie $r2, $r17;
        boolean $z0;
        javax.servlet.http.HttpServletResponse r3;
        java.time.Instant $r6, $r8;
        org.springframework.http.HttpStatus $r4, $r18;

        r19 := @this;

        r0 := @parameter0;

        r3 := @parameter1;

        $r1 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.validUsers;

        $z0 = virtualinvoke $r1.contains(r0);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke io.jsonwebtoken.Jwts.claims();

        $r6 = staticinvoke java.time.Instant.now();

        $r7 = staticinvoke java.time.Duration.ofDays(10L);

        $r8 = virtualinvoke $r6.plus($r7);

        $r9 = staticinvoke java.util.Date.from($r8);

        $r10 = interfaceinvoke $r5.setIssuedAt($r9);

        interfaceinvoke $r10.put("admin", "false");

        interfaceinvoke $r10.put("user", r0);

        $r11 = staticinvoke io.jsonwebtoken.Jwts.builder();

        $r12 = interfaceinvoke $r11.setClaims($r10);

        $r14 = io.jsonwebtoken.SignatureAlgorithm.HS512;

        $r13 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.JWT_PASSWORD;

        $r15 = interfaceinvoke $r12.signWith($r14, $r13);

        $r16 = interfaceinvoke $r15.compact();

        $r17 = new javax.servlet.http.Cookie;

        specialinvoke $r17.<init>("access_token", $r16);

        interfaceinvoke r3.addCookie($r17);

        $r18 = org.springframework.http.HttpStatus.OK;

        $i1 = virtualinvoke $r18.value();

        interfaceinvoke r3.setStatus($i1);

        interfaceinvoke r3.setContentType("application/json");

        goto label2;

     label1:
        $r2 = new javax.servlet.http.Cookie;

        specialinvoke $r2.<init>("access_token", "");

        interfaceinvoke r3.addCookie($r2);

        $r4 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $i0 = virtualinvoke $r4.value();

        interfaceinvoke r3.setStatus($i0);

        interfaceinvoke r3.setContentType("application/json");

     label2:
        return;
    }

    public org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)
    {
        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint r1;
        io.jsonwebtoken.JwtParser $r12, $r14;
        io.jsonwebtoken.Claims r17;
        io.jsonwebtoken.Jwt $r15;
        java.util.Map $r2;
        org.springframework.http.converter.json.MappingJacksonValue $r0;
        java.util.stream.Collector $r9;
        java.lang.String r11, $r13, r19, $r20, $r21;
        java.util.function.ToLongFunction $r5;
        boolean $z0, $z1, $z2;
        java.util.Collection $r3;
        java.util.stream.Stream $r4, $r8;
        java.lang.Object $r10, $r16, $r18;
        io.jsonwebtoken.JwtException $r22;
        java.util.Comparator $r6, $r7;

        r1 := @this;

        r11 := @parameter0;

        $r0 = new org.springframework.http.converter.json.MappingJacksonValue;

        $r2 = r1.votes;

        $r3 = interfaceinvoke $r2.values();

        $r4 = interfaceinvoke $r3.stream();

        $r5 = staticinvoke org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint$getAverage__51.bootstrap$();

        $r6 = staticinvoke java.util.Comparator.comparingLong($r5);

        $r7 = interfaceinvoke $r6.reversed();

        $r8 = interfaceinvoke $r4.sorted($r7);

        $r9 = staticinvoke java.util.stream.Collectors.toList();

        $r10 = interfaceinvoke $r8.collect($r9);

        specialinvoke $r0.<init>($r10);

        $z0 = staticinvoke org.apache.commons.lang3.StringUtils.isEmpty(r11);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.setSerializationView(class "Lorg/owasp/webgoat/lessons/jwt/votes/Views$GuestView;");

        goto label6;

     label1:
        $r12 = staticinvoke io.jsonwebtoken.Jwts.parser();

        $r13 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.JWT_PASSWORD;

        $r14 = interfaceinvoke $r12.setSigningKey($r13);

        $r15 = interfaceinvoke $r14.parse(r11);

        $r16 = interfaceinvoke $r15.getBody();

        r17 = (io.jsonwebtoken.Claims) $r16;

        $r18 = interfaceinvoke r17.get("user");

        r19 = (java.lang.String) $r18;

        $r20 = "Guest";

        $z1 = virtualinvoke $r20.equals(r19);

        if $z1 != 0 goto label2;

        $r21 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.validUsers;

        $z2 = virtualinvoke $r21.contains(r19);

        if $z2 != 0 goto label3;

     label2:
        virtualinvoke $r0.setSerializationView(class "Lorg/owasp/webgoat/lessons/jwt/votes/Views$GuestView;");

        goto label4;

     label3:
        virtualinvoke $r0.setSerializationView(class "Lorg/owasp/webgoat/lessons/jwt/votes/Views$UserView;");

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        virtualinvoke $r0.setSerializationView(class "Lorg/owasp/webgoat/lessons/jwt/votes/Views$GuestView;");

     label6:
        return $r0;

        catch io.jsonwebtoken.JwtException from label1 to label4 with label5;
    }

    public org.springframework.http.ResponseEntity vote(java.lang.String, java.lang.String)
    {
        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint r10;
        io.jsonwebtoken.JwtParser $r1, $r3;
        org.springframework.http.ResponseEntity$BodyBuilder $r17, $r20, $r23, $r27;
        io.jsonwebtoken.Claims r6;
        io.jsonwebtoken.Jwt $r4;
        java.util.Map $r12;
        java.lang.String r0, $r2, r8, $r9, r11;
        boolean $z0, $z1;
        org.owasp.webgoat.lessons.jwt.votes.Vote $r14;
        java.util.function.Consumer $r16;
        org.springframework.http.HttpStatus $r19, $r22, $r26;
        java.util.Optional $r15;
        java.lang.Object $r5, $r7, $r13;
        org.springframework.http.ResponseEntity $r18, $r21, $r24, $r28;
        io.jsonwebtoken.JwtException $r25;

        r10 := @this;

        r11 := @parameter0;

        r0 := @parameter1;

        $z0 = staticinvoke org.apache.commons.lang3.StringUtils.isEmpty(r0);

        if $z0 == 0 goto label1;

        $r22 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r23 = staticinvoke org.springframework.http.ResponseEntity.status($r22);

        $r24 = interfaceinvoke $r23.build();

        return $r24;

     label1:
        $r1 = staticinvoke io.jsonwebtoken.Jwts.parser();

        $r2 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.JWT_PASSWORD;

        $r3 = interfaceinvoke $r1.setSigningKey($r2);

        $r4 = interfaceinvoke $r3.parse(r0);

        $r5 = interfaceinvoke $r4.getBody();

        r6 = (io.jsonwebtoken.Claims) $r5;

        $r7 = interfaceinvoke r6.get("user");

        r8 = (java.lang.String) $r7;

        $r9 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.validUsers;

        $z1 = virtualinvoke $r9.contains(r8);

        if $z1 != 0 goto label3;

        $r19 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r20 = staticinvoke org.springframework.http.ResponseEntity.status($r19);

        $r21 = interfaceinvoke $r20.build();

     label2:
        return $r21;

     label3:
        $r12 = r10.votes;

        $r13 = interfaceinvoke $r12.get(r11);

        $r14 = (org.owasp.webgoat.lessons.jwt.votes.Vote) $r13;

        $r15 = staticinvoke java.util.Optional.ofNullable($r14);

        $r16 = staticinvoke org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint$lambda_vote_0__52.bootstrap$();

        virtualinvoke $r15.ifPresent($r16);

        $r17 = staticinvoke org.springframework.http.ResponseEntity.accepted();

        $r18 = interfaceinvoke $r17.build();

     label4:
        return $r18;

     label5:
        $r25 := @caughtexception;

        $r26 = org.springframework.http.HttpStatus.UNAUTHORIZED;

        $r27 = staticinvoke org.springframework.http.ResponseEntity.status($r26);

        $r28 = interfaceinvoke $r27.build();

        return $r28;

        catch io.jsonwebtoken.JwtException from label1 to label2 with label5;
        catch io.jsonwebtoken.JwtException from label3 to label4 with label5;
    }

    public org.owasp.webgoat.container.assignments.AttackResult resetVotes(java.lang.String)
    {
        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint r10;
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r14, $r16, $r17, $r19, $r20, $r23, $r24, $r26;
        io.jsonwebtoken.JwtParser $r1, $r3;
        io.jsonwebtoken.Claims r6;
        io.jsonwebtoken.Jwt $r4;
        java.util.Map $r11;
        java.lang.Boolean $r9;
        java.lang.String r0, $r2, $r8, $r25;
        boolean $z0, $z1;
        java.util.Collection $r12;
        java.util.function.Consumer $r13;
        org.owasp.webgoat.container.assignments.AttackResult $r15, $r18, $r21, $r27;
        java.lang.Object $r5, $r7;
        io.jsonwebtoken.JwtException $r22;

        r10 := @this;

        r0 := @parameter0;

        $z0 = staticinvoke org.apache.commons.lang3.StringUtils.isEmpty(r0);

        if $z0 == 0 goto label1;

        $r19 = virtualinvoke r10.failed(r10);

        $r20 = virtualinvoke $r19.feedback("jwt-invalid-token");

        $r21 = virtualinvoke $r20.build();

        return $r21;

     label1:
        $r1 = staticinvoke io.jsonwebtoken.Jwts.parser();

        $r2 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.JWT_PASSWORD;

        $r3 = interfaceinvoke $r1.setSigningKey($r2);

        $r4 = interfaceinvoke $r3.parse(r0);

        $r5 = interfaceinvoke $r4.getBody();

        r6 = (io.jsonwebtoken.Claims) $r5;

        $r7 = interfaceinvoke r6.get("admin");

        $r8 = staticinvoke java.lang.String.valueOf($r7);

        $r9 = staticinvoke java.lang.Boolean.valueOf($r8);

        $z1 = virtualinvoke $r9.booleanValue();

        if $z1 != 0 goto label3;

        $r16 = virtualinvoke r10.failed(r10);

        $r17 = virtualinvoke $r16.feedback("jwt-only-admin");

        $r18 = virtualinvoke $r17.build();

     label2:
        return $r18;

     label3:
        $r11 = r10.votes;

        $r12 = interfaceinvoke $r11.values();

        $r13 = staticinvoke org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint$lambda_resetVotes_1__53.bootstrap$();

        interfaceinvoke $r12.forEach($r13);

        $r14 = virtualinvoke r10.success(r10);

        $r15 = virtualinvoke $r14.build();

     label4:
        return $r15;

     label5:
        $r22 := @caughtexception;

        $r23 = virtualinvoke r10.failed(r10);

        $r24 = virtualinvoke $r23.feedback("jwt-invalid-token");

        $r25 = virtualinvoke $r22.toString();

        $r26 = virtualinvoke $r24.output($r25);

        $r27 = virtualinvoke $r26.build();

        return $r27;

        catch io.jsonwebtoken.JwtException from label1 to label2 with label5;
        catch io.jsonwebtoken.JwtException from label3 to label4 with label5;
    }

    public static void lambda$resetVotes$1(org.owasp.webgoat.lessons.jwt.votes.Vote)
    {
        org.owasp.webgoat.lessons.jwt.votes.Vote r0;

        r0 := @parameter0;

        virtualinvoke r0.reset();

        return;
    }

    public static void lambda$vote$0(org.owasp.webgoat.lessons.jwt.votes.Vote)
    {
        int $i0;
        org.owasp.webgoat.lessons.jwt.votes.Vote r0;

        r0 := @parameter0;

        $i0 = org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.totalVotes;

        virtualinvoke r0.incrementNumberOfVotes($i0);

        return;
    }

    static void <clinit>()
    {
        int $i1;
        io.jsonwebtoken.impl.TextCodec $r0;
        java.lang.String $r1;

        $r0 = io.jsonwebtoken.impl.TextCodec.BASE64;

        $r1 = interfaceinvoke $r0.encode("victory");

        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.JWT_PASSWORD = $r1;

        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.validUsers = "TomJerrySylvester";

        $i1 = (int) 38929;

        org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.totalVotes = $i1;

        return;
    }
}
