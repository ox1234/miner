public class org.owasp.webgoat.container.users.LessonTracker extends java.lang.Object
{
    private java.lang.Long id;
    private java.lang.String lessonName;
    private final java.util.Set solvedAssignments;
    private final java.util.Set allAssignments;
    private int numberOfAttempts;
    private java.lang.Integer version;

    private void <init>()
    {
        java.util.HashSet $r1, $r2;
        org.owasp.webgoat.container.users.LessonTracker r0;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<init>();

        r0.solvedAssignments = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<init>();

        r0.allAssignments = $r2;

        r0.numberOfAttempts = 0;

        return;
    }

    public void <init>(org.owasp.webgoat.container.lessons.Lesson)
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.util.Set $r5;
        org.owasp.webgoat.container.lessons.Lesson r3;
        java.util.HashSet $r1, $r2;
        java.util.List $r6, $r7, $r7_1, $r7_2;
        java.lang.String $r4;

        r0 := @this;

        r3 := @parameter0;

        specialinvoke r0.<init>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<init>();

        r0.solvedAssignments = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<init>();

        r0.allAssignments = $r2;

        r0.numberOfAttempts = 0;

        $r4 = virtualinvoke r3.getId();

        r0.lessonName = $r4;

        $r5 = r0.allAssignments;

        $r6 = virtualinvoke r3.getAssignments();

        if $r6 != null goto label1;

        $r7 = staticinvoke java.util.List.of();

(0)     goto label2;

     label1:
(1)     $r7_1 = virtualinvoke r3.getAssignments();

     label2:
        $r7_2 = Phi($r7 #0, $r7_1 #1);

        interfaceinvoke $r5.addAll($r7_2);

        return;
    }

    public java.util.Optional getAssignment(java.lang.String)
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.util.stream.Stream $r2, $r5;
        java.util.function.Predicate $r4;
        java.util.Set $r1;
        java.util.Optional $r6;
        java.lang.String r3;

        r0 := @this;

        r3 := @parameter0;

        $r1 = r0.allAssignments;

        $r2 = interfaceinvoke $r1.stream();

        $r4 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$lambda_getAssignment_0__19.bootstrap$(r3);

        $r5 = interfaceinvoke $r2.filter($r4);

        $r6 = interfaceinvoke $r5.findFirst();

        return $r6;
    }

    public void assignmentSolved(java.lang.String)
    {
        java.util.function.Consumer $r4;
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.util.Optional $r2;
        java.util.Set $r3;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = virtualinvoke r0.getAssignment(r1);

        $r3 = r0.solvedAssignments;

        staticinvoke java.util.Objects.requireNonNull($r3);

        $r4 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$add__20.bootstrap$($r3);

        virtualinvoke $r2.ifPresent($r4);

        return;
    }

    public boolean isLessonSolved()
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.util.Set $r1, $r2;
        int $i0, $i1;
        boolean $z0, $z0_1, $z0_2;

        r0 := @this;

        $r1 = r0.allAssignments;

        $i0 = interfaceinvoke $r1.size();

        $r2 = r0.solvedAssignments;

        $i1 = interfaceinvoke $r2.size();

        if $i0 != $i1 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public void incrementAttempts()
    {
        int $i0, $i1;
        org.owasp.webgoat.container.users.LessonTracker r0;

        r0 := @this;

        $i0 = r0.numberOfAttempts;

        $i1 = $i0 + 1;

        r0.numberOfAttempts = $i1;

        return;
    }

    void reset()
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.util.Set $r1;

        r0 := @this;

        $r1 = r0.solvedAssignments;

        interfaceinvoke $r1.clear();

        return;
    }

    public java.util.Map getLessonOverview()
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.util.function.Function $r7, $r8, $r14, $r15;
        java.util.Map r11, $r18;
        java.util.stream.Collector $r9, $r16;
        java.util.function.Predicate $r3;
        java.util.Set $r1, $r12;
        java.util.List $r5;
        java.util.stream.Stream $r2, $r4, $r6, $r13;
        java.lang.Object $r10, $r17;

        r0 := @this;

        $r1 = r0.allAssignments;

        $r2 = interfaceinvoke $r1.stream();

        $r3 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$lambda_getLessonOverview_1__21.bootstrap$(r0);

        $r4 = interfaceinvoke $r2.filter($r3);

        $r5 = interfaceinvoke $r4.toList();

        $r6 = interfaceinvoke $r5.stream();

        $r7 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$lambda_getLessonOverview_2__22.bootstrap$();

        $r8 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$lambda_getLessonOverview_3__23.bootstrap$();

        $r9 = staticinvoke java.util.stream.Collectors.toMap($r7, $r8);

        $r10 = interfaceinvoke $r6.collect($r9);

        r11 = (java.util.Map) $r10;

        $r12 = r0.solvedAssignments;

        $r13 = interfaceinvoke $r12.stream();

        $r14 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$lambda_getLessonOverview_4__24.bootstrap$();

        $r15 = staticinvoke org.owasp.webgoat.container.users.LessonTracker$lambda_getLessonOverview_5__25.bootstrap$();

        $r16 = staticinvoke java.util.stream.Collectors.toMap($r14, $r15);

        $r17 = interfaceinvoke $r13.collect($r16);

        $r18 = (java.util.Map) $r17;

        interfaceinvoke r11.putAll($r18);

        return r11;
    }

    public java.lang.String getLessonName()
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.lessonName;

        return $r1;
    }

    public int getNumberOfAttempts()
    {
        int $i0;
        org.owasp.webgoat.container.users.LessonTracker r0;

        r0 := @this;

        $i0 = r0.numberOfAttempts;

        return $i0;
    }

    public static java.lang.Boolean lambda$getLessonOverview$5(org.owasp.webgoat.container.lessons.Assignment)
    {
        java.lang.Boolean $r0;
        org.owasp.webgoat.container.lessons.Assignment r1;

        r1 := @parameter0;

        $r0 = staticinvoke java.lang.Boolean.valueOf(1);

        return $r0;
    }

    public static org.owasp.webgoat.container.lessons.Assignment lambda$getLessonOverview$4(org.owasp.webgoat.container.lessons.Assignment)
    {
        org.owasp.webgoat.container.lessons.Assignment r0;

        r0 := @parameter0;

        return r0;
    }

    public static java.lang.Boolean lambda$getLessonOverview$3(org.owasp.webgoat.container.lessons.Assignment)
    {
        java.lang.Boolean $r0;
        org.owasp.webgoat.container.lessons.Assignment r1;

        r1 := @parameter0;

        $r0 = staticinvoke java.lang.Boolean.valueOf(0);

        return $r0;
    }

    public static org.owasp.webgoat.container.lessons.Assignment lambda$getLessonOverview$2(org.owasp.webgoat.container.lessons.Assignment)
    {
        org.owasp.webgoat.container.lessons.Assignment r0;

        r0 := @parameter0;

        return r0;
    }

    private boolean lambda$getLessonOverview$1(org.owasp.webgoat.container.lessons.Assignment)
    {
        org.owasp.webgoat.container.users.LessonTracker r0;
        org.owasp.webgoat.container.lessons.Assignment r1;
        java.util.Set $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.solvedAssignments;

        $z0 = interfaceinvoke $r2.contains(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

(0)     goto label2;

     label1:
(1)     $z1_1 = 0;

     label2:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;
    }

    public static boolean lambda$getAssignment$0(java.lang.String, org.owasp.webgoat.container.lessons.Assignment)
    {
        org.owasp.webgoat.container.lessons.Assignment r0;
        java.lang.String $r1, r2;
        boolean $z0;

        r2 := @parameter0;

        r0 := @parameter1;

        $r1 = virtualinvoke r0.getName();

        $z0 = virtualinvoke $r1.equals(r2);

        return $z0;
    }
}
