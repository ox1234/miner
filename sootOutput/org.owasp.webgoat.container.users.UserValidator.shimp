public class org.owasp.webgoat.container.users.UserValidator extends java.lang.Object implements org.springframework.validation.Validator
{
    private final org.owasp.webgoat.container.users.UserRepository userRepository;

    public boolean supports(java.lang.Class)
    {
        org.owasp.webgoat.container.users.UserValidator r2;
        java.lang.Class r0, $r1;
        boolean $z0;

        r2 := @this;

        r0 := @parameter0;

        $r1 = class "Lorg/owasp/webgoat/container/users/UserForm;";

        $z0 = virtualinvoke $r1.equals(r0);

        return $z0;
    }

    public void validate(java.lang.Object, org.springframework.validation.Errors)
    {
        org.owasp.webgoat.container.users.UserRepository $r3;
        org.springframework.validation.Errors r8;
        org.owasp.webgoat.container.users.WebGoatUser $r5;
        org.owasp.webgoat.container.users.UserValidator r2;
        org.owasp.webgoat.container.users.UserForm r1;
        java.lang.Object r0;
        java.lang.String $r4, $r6, $r7;
        boolean $z0;

        r2 := @this;

        r0 := @parameter0;

        r8 := @parameter1;

        r1 = (org.owasp.webgoat.container.users.UserForm) r0;

        $r3 = r2.userRepository;

        $r4 = virtualinvoke r1.getUsername();

        $r5 = interfaceinvoke $r3.findByUsername($r4);

        if $r5 == null goto label1;

        interfaceinvoke r8.rejectValue("username", "username.duplicate");

     label1:
        $r6 = virtualinvoke r1.getMatchingPassword();

        $r7 = virtualinvoke r1.getPassword();

        $z0 = virtualinvoke $r6.equals($r7);

        if $z0 != 0 goto label2;

        interfaceinvoke r8.rejectValue("matchingPassword", "password.diff");

     label2:
        return;
    }

    public void <init>(org.owasp.webgoat.container.users.UserRepository)
    {
        org.owasp.webgoat.container.users.UserValidator r0;
        org.owasp.webgoat.container.users.UserRepository r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.userRepository = r1;

        return;
    }
}
