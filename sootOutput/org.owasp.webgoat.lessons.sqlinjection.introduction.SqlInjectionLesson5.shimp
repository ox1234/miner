public class org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5 extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    private final org.owasp.webgoat.container.LessonDataSource dataSource;

    public void <init>(org.owasp.webgoat.container.LessonDataSource)
    {
        org.owasp.webgoat.container.LessonDataSource r1;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5 r0;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.dataSource = r1;

        return;
    }

    public void createUser()
    {
        java.lang.Throwable $r5, $r6, $r7, $r8;
        org.owasp.webgoat.container.LessonDataSource $r1;
        java.sql.Connection $r2;
        java.sql.PreparedStatement $r3;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5 r0;
        java.lang.Exception $r4;

        r0 := @this;

     label01:
        $r1 = r0.dataSource;

        $r2 = virtualinvoke $r1.getConnection();

     label02:
        $r3 = interfaceinvoke $r2.prepareStatement("CREATE USER unauthorized_user PASSWORD test");

     label03:
        interfaceinvoke $r3.execute();

     label04:
        if $r3 == null goto label10;

        interfaceinvoke $r3.close();

        goto label10;

     label05:
        $r8 := @caughtexception;

        if $r3 == null goto label09;

     label06:
        interfaceinvoke $r3.close();

     label07:
        goto label09;

     label08:
        $r7 := @caughtexception;

        virtualinvoke $r8.addSuppressed($r7);

     label09:
        throw $r8;

     label10:
        if $r2 == null goto label16;

        interfaceinvoke $r2.close();

        goto label16;

     label11:
        $r6 := @caughtexception;

        if $r2 == null goto label15;

     label12:
        interfaceinvoke $r2.close();

     label13:
        goto label15;

     label14:
        $r5 := @caughtexception;

        virtualinvoke $r6.addSuppressed($r5);

     label15:
        throw $r6;

     label16:
        goto label18;

     label17:
        $r4 := @caughtexception;

     label18:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Exception from label01 to label16 with label17;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String)
    {
        org.owasp.webgoat.container.assignments.AttackResult $r2;
        java.lang.String r1;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5 r0;

        r0 := @this;

        r1 := @parameter0;

        virtualinvoke r0.createUser();

        $r2 = virtualinvoke r0.injectableQuery(r1);

        return $r2;
    }

    protected org.owasp.webgoat.container.assignments.AttackResult injectableQuery(java.lang.String)
    {
        java.lang.Throwable $r19, $r20, $r21, $r22;
        org.owasp.webgoat.container.LessonDataSource $r1;
        java.sql.Connection $r2;
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r5, $r7, $r9, $r12, $r17;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5 r0;
        java.lang.String r4, $r6, $r14, $r15, $r16;
        boolean $z0;
        java.lang.Exception $r11;
        java.sql.Statement $r3;
        org.owasp.webgoat.container.assignments.AttackResult $r8, $r10, $r18;
        java.lang.Class $r13;

        r0 := @this;

        r4 := @parameter0;

     label01:
        $r1 = r0.dataSource;

        $r2 = virtualinvoke $r1.getConnection();

     label02:
        $r3 = interfaceinvoke $r2.createStatement(1004, 1008);

     label03:
        interfaceinvoke $r3.executeQuery(r4);

        $z0 = virtualinvoke r0.checkSolution($r2);

        if $z0 == 0 goto label07;

        $r9 = virtualinvoke r0.success(r0);

        $r10 = virtualinvoke $r9.build();

     label04:
        if $r3 == null goto label05;

        interfaceinvoke $r3.close();

     label05:
        if $r2 == null goto label06;

        interfaceinvoke $r2.close();

     label06:
        return $r10;

     label07:
        $r5 = virtualinvoke r0.failed(r0);

        $r6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(r4) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("Your query was: \u0001");

        $r7 = virtualinvoke $r5.output($r6);

        $r8 = virtualinvoke $r7.build();

     label08:
        if $r3 == null goto label09;

        interfaceinvoke $r3.close();

     label09:
        if $r2 == null goto label10;

        interfaceinvoke $r2.close();

     label10:
        return $r8;

     label11:
        $r22 := @caughtexception;

        if $r3 == null goto label15;

     label12:
        interfaceinvoke $r3.close();

     label13:
        goto label15;

     label14:
        $r21 := @caughtexception;

        virtualinvoke $r22.addSuppressed($r21);

     label15:
        throw $r22;

     label16:
        $r20 := @caughtexception;

        if $r2 == null goto label20;

     label17:
        interfaceinvoke $r2.close();

     label18:
        goto label20;

     label19:
        $r19 := @caughtexception;

        virtualinvoke $r20.addSuppressed($r19);

     label20:
        throw $r20;

     label21:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r0.failed(r0);

        $r13 = virtualinvoke r0.getClass();

        $r14 = virtualinvoke $r13.getName();

        $r15 = virtualinvoke $r11.getMessage();

        $r16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, r4) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("\u0001 : \u0001<br> Your query was: \u0001");

        $r17 = virtualinvoke $r12.output($r16);

        $r18 = virtualinvoke $r17.build();

        return $r18;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label02 to label05 with label16;
        catch java.lang.Throwable from label07 to label09 with label16;
        catch java.lang.Throwable from label11 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Exception from label01 to label06 with label21;
        catch java.lang.Exception from label07 to label10 with label21;
        catch java.lang.Exception from label11 to label21 with label21;
    }

    private boolean checkSolution(java.sql.Connection)
    {
        java.lang.Throwable $r3;
        java.sql.Connection r0;
        java.sql.ResultSet $r2;
        java.sql.PreparedStatement $r1;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5 r4;
        boolean $z0;

        r4 := @this;

        r0 := @parameter0;

     label1:
        $r1 = interfaceinvoke r0.prepareStatement("SELECT * FROM INFORMATION_SCHEMA.TABLE_PRIVILEGES WHERE TABLE_NAME = ? AND GRANTEE = ?");

        interfaceinvoke $r1.setString(1, "GRANT_RIGHTS");

        interfaceinvoke $r1.setString(2, "UNAUTHORIZED_USER");

        $r2 = interfaceinvoke $r1.executeQuery();

        $z0 = interfaceinvoke $r2.next();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.sql.SQLException from label1 to label2 with label3;
    }
}
