public class org.owasp.webgoat.container.assignments.LessonTrackerInterceptor extends java.lang.Object implements org.springframework.web.servlet.mvc.method.'annotation'.ResponseBodyAdvice
{
    private org.owasp.webgoat.container.users.UserTrackerRepository userTrackerRepository;
    private org.owasp.webgoat.container.session.WebSession webSession;

    public void <init>(org.owasp.webgoat.container.users.UserTrackerRepository, org.owasp.webgoat.container.session.WebSession)
    {
        org.owasp.webgoat.container.users.UserTrackerRepository r1;
        org.owasp.webgoat.container.session.WebSession r2;
        org.owasp.webgoat.container.assignments.LessonTrackerInterceptor r0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.userTrackerRepository = r1;

        r0.webSession = r2;

        return;
    }

    public boolean supports(org.springframework.core.MethodParameter, java.lang.Class)
    {
        java.lang.Class r2;
        org.owasp.webgoat.container.assignments.LessonTrackerInterceptor r0;
        org.springframework.core.MethodParameter r1;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        return 1;
    }

    public java.lang.Object beforeBodyWrite(java.lang.Object, org.springframework.core.MethodParameter, org.springframework.http.MediaType, java.lang.Class, org.springframework.http.server.ServerHttpRequest, org.springframework.http.server.ServerHttpResponse)
    {
        org.springframework.http.MediaType r4;
        org.springframework.http.server.ServerHttpRequest r6;
        org.springframework.http.server.ServerHttpResponse r7;
        org.owasp.webgoat.container.assignments.LessonTrackerInterceptor r2;
        org.springframework.core.MethodParameter r3;
        org.owasp.webgoat.container.assignments.AttackResult r1;
        java.lang.Object r0;
        java.lang.Class r5;
        boolean $z0;

        r2 := @this;

        r0 := @parameter0;

        r3 := @parameter1;

        r4 := @parameter2;

        r5 := @parameter3;

        r6 := @parameter4;

        r7 := @parameter5;

        $z0 = r0 instanceof org.owasp.webgoat.container.assignments.AttackResult;

        if $z0 == 0 goto label1;

        r1 = (org.owasp.webgoat.container.assignments.AttackResult) r0;

        virtualinvoke r2.trackProgress(r1);

     label1:
        return r0;
    }

    protected org.owasp.webgoat.container.assignments.AttackResult trackProgress(org.owasp.webgoat.container.assignments.AttackResult)
    {
        org.owasp.webgoat.container.lessons.Lesson $r7, $r10;
        org.owasp.webgoat.container.assignments.LessonTrackerInterceptor r0;
        java.lang.String $r3, $r11, $r14;
        boolean $z0;
        org.owasp.webgoat.container.users.UserTrackerRepository $r2, $r8;
        org.owasp.webgoat.container.users.UserTracker $r4, $r12, r15, r15_1, r15_2;
        org.owasp.webgoat.container.session.WebSession $r1, $r6, $r9, $r13;
        org.owasp.webgoat.container.assignments.AttackResult r5;

        r0 := @this;

        r5 := @parameter0;

        $r2 = r0.userTrackerRepository;

        $r1 = r0.webSession;

        $r3 = virtualinvoke $r1.getUserName();

        $r4 = interfaceinvoke $r2.findByUser($r3);

        r15 = $r4;

(0)     if $r4 != null goto label1;

        $r12 = new org.owasp.webgoat.container.users.UserTracker;

        $r13 = r0.webSession;

        $r14 = virtualinvoke $r13.getUserName();

        specialinvoke $r12.<init>($r14);

(1)     r15_1 = $r12;

     label1:
        r15_2 = Phi(r15 #0, r15_1 #1);

        $z0 = virtualinvoke r5.assignmentSolved();

        if $z0 == 0 goto label2;

        $r9 = r0.webSession;

        $r10 = virtualinvoke $r9.getCurrentLesson();

        $r11 = virtualinvoke r5.getAssignment();

        virtualinvoke r15_2.assignmentSolved($r10, $r11);

        goto label3;

     label2:
        $r6 = r0.webSession;

        $r7 = virtualinvoke $r6.getCurrentLesson();

        virtualinvoke r15_2.assignmentFailed($r7);

     label3:
        $r8 = r0.userTrackerRepository;

        interfaceinvoke $r8.saveAndFlush(r15_2);

        return r5;
    }
}
