public class org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers extends java.lang.Object
{
    private static final org.slf4j.Logger log;
    private final org.owasp.webgoat.container.LessonDataSource dataSource;

    public void <init>(org.owasp.webgoat.container.LessonDataSource)
    {
        org.owasp.webgoat.container.LessonDataSource r1;
        org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers r0;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.dataSource = r1;

        return;
    }

    public java.util.List sort(java.lang.String) throws java.lang.Exception
    {
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19, $r20;
        org.owasp.webgoat.container.LessonDataSource $r2;
        java.sql.Connection $r3;
        org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers r1;
        java.util.ArrayList $r0;
        java.sql.ResultSet $r7;
        java.lang.String r4, $r5, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0;
        java.sql.PreparedStatement $r6;
        org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers$Server $r8;

        r1 := @this;

        r4 := @parameter0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<init>();

        $r2 = r1.dataSource;

        $r3 = virtualinvoke $r2.getConnection();

     label01:
        $r5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(r4) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("select id, hostname, ip, mac, status, description from SERVERS where status <> \'out of order\' order by \u0001");

        $r6 = interfaceinvoke $r3.prepareStatement($r5);

     label02:
        $r7 = interfaceinvoke $r6.executeQuery();

     label03:
        $z0 = interfaceinvoke $r7.next();

        if $z0 == 0 goto label04;

        $r8 = new org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers$Server;

        $r9 = interfaceinvoke $r7.getString(1);

        $r10 = interfaceinvoke $r7.getString(2);

        $r11 = interfaceinvoke $r7.getString(3);

        $r12 = interfaceinvoke $r7.getString(4);

        $r13 = interfaceinvoke $r7.getString(5);

        $r14 = interfaceinvoke $r7.getString(6);

        specialinvoke $r8.<init>(r1, $r9, $r10, $r11, $r12, $r13, $r14);

        interfaceinvoke $r0.add($r8);

        goto label03;

     label04:
        if $r7 == null goto label10;

        interfaceinvoke $r7.close();

        goto label10;

     label05:
        $r20 := @caughtexception;

        if $r7 == null goto label09;

     label06:
        interfaceinvoke $r7.close();

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        virtualinvoke $r20.addSuppressed($r19);

     label09:
        throw $r20;

     label10:
        if $r6 == null goto label16;

        interfaceinvoke $r6.close();

        goto label16;

     label11:
        $r18 := @caughtexception;

        if $r6 == null goto label15;

     label12:
        interfaceinvoke $r6.close();

     label13:
        goto label15;

     label14:
        $r17 := @caughtexception;

        virtualinvoke $r18.addSuppressed($r17);

     label15:
        throw $r18;

     label16:
        if $r3 == null goto label22;

        interfaceinvoke $r3.close();

        goto label22;

     label17:
        $r16 := @caughtexception;

        if $r3 == null goto label21;

     label18:
        interfaceinvoke $r3.close();

     label19:
        goto label21;

     label20:
        $r15 := @caughtexception;

        virtualinvoke $r16.addSuppressed($r15);

     label21:
        throw $r16;

     label22:
        return $r0;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke org.slf4j.LoggerFactory.getLogger(class "Lorg/owasp/webgoat/lessons/sqlinjection/mitigation/Servers;");

        org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers.log = $r0;

        return;
    }
}
