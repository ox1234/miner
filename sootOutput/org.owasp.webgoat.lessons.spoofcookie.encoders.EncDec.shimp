public class org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec extends java.lang.Object
{
    private static final java.lang.String SALT;

    private void <init>()
    {
        org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.toLowerCase();

        $r2 = org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.SALT;

        $r3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($r1, $r2) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("\u0001\u0001");

        $r4 = staticinvoke org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.revert($r3);

        $r5 = staticinvoke org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.hexEncode($r4);

        $r6 = staticinvoke org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.base64Encode($r5);

        return $r6;
    }

    public static java.lang.String decode(java.lang.String) throws java.lang.IllegalArgumentException
    {
        int $i0, $i1, $i2;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5;

        r0 := @parameter0;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.base64Decode(r0);

        $r2 = staticinvoke org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.hexDecode($r1);

        $r3 = staticinvoke org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.revert($r2);

        $i0 = virtualinvoke $r3.length();

        $r4 = org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.SALT;

        $i1 = virtualinvoke $r4.length();

        $i2 = $i0 - $i1;

        $r5 = virtualinvoke $r3.substring(0, $i2);

        return $r5;
    }

    private static java.lang.String revert(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2;
        java.lang.String r1, $r3;

        r1 := @parameter0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<init>(r1);

        $r2 = virtualinvoke $r0.reverse();

        $r3 = virtualinvoke $r2.toString();

        return $r3;
    }

    private static java.lang.String hexEncode(java.lang.String)
    {
        byte[] $r2;
        java.nio.charset.Charset $r1;
        char[] $r3;
        java.lang.String r0, $r4;

        r0 := @parameter0;

        $r1 = java.nio.charset.StandardCharsets.UTF_8;

        $r2 = virtualinvoke r0.getBytes($r1);

        $r3 = staticinvoke org.springframework.security.crypto.codec.Hex.encode($r2);

        $r4 = new java.lang.String;

        specialinvoke $r4.<init>($r3);

        return $r4;
    }

    private static java.lang.String hexDecode(java.lang.String)
    {
        byte[] $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0;

        $r1 = staticinvoke org.springframework.security.crypto.codec.Hex.decode(r0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<init>($r1);

        return $r2;
    }

    private static java.lang.String base64Encode(java.lang.String)
    {
        byte[] $r2;
        java.util.Base64$Encoder $r0;
        java.lang.String r1, $r3;

        r1 := @parameter0;

        $r0 = staticinvoke java.util.Base64.getEncoder();

        $r2 = virtualinvoke r1.getBytes();

        $r3 = virtualinvoke $r0.encodeToString($r2);

        return $r3;
    }

    private static java.lang.String base64Decode(java.lang.String)
    {
        byte[] $r2, $r3;
        java.util.Base64$Decoder $r0;
        java.lang.String r1, $r4;

        r1 := @parameter0;

        $r0 = staticinvoke java.util.Base64.getDecoder();

        $r2 = virtualinvoke r1.getBytes();

        $r3 = virtualinvoke $r0.decode($r2);

        $r4 = new java.lang.String;

        specialinvoke $r4.<init>($r3);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(10);

        org.owasp.webgoat.lessons.spoofcookie.encoders.EncDec.SALT = $r0;

        return;
    }
}
