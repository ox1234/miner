public class org.owasp.webgoat.lessons.authbypass.VerifyAccount extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    private org.owasp.webgoat.container.session.WebSession webSession;
    org.owasp.webgoat.container.session.UserSessionData userSessionData;

    public void <init>()
    {
        org.owasp.webgoat.lessons.authbypass.VerifyAccount r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest) throws javax.servlet.ServletException, java.io.IOException
    {
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r8, $r9, $r12, $r13, $r15, $r16, $r17;
        java.util.HashMap $r3, $r4, $r7;
        java.lang.Integer $r6;
        javax.servlet.http.HttpServletRequest r2;
        java.lang.String r5, r19;
        boolean $z0, $z1;
        org.owasp.webgoat.lessons.authbypass.AccountVerificationHelper $r0;
        org.owasp.webgoat.lessons.authbypass.VerifyAccount r1;
        org.owasp.webgoat.container.session.UserSessionData $r11;
        org.owasp.webgoat.container.assignments.AttackResult $r10, $r14, $r18;

        r1 := @this;

        r5 := @parameter0;

        r19 := @parameter1;

        r2 := @parameter2;

        $r0 = new org.owasp.webgoat.lessons.authbypass.AccountVerificationHelper;

        specialinvoke $r0.<init>();

        $r3 = virtualinvoke r1.parseSecQuestions(r2);

        $r4 = (java.util.HashMap) $r3;

        $z0 = virtualinvoke $r0.didUserLikelylCheat($r4);

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke r1.failed(r1);

        $r16 = virtualinvoke $r15.feedback("verify-account.cheated");

        $r17 = virtualinvoke $r16.output("Yes, you guessed correctly, but see the feedback message");

        $r18 = virtualinvoke $r17.build();

        return $r18;

     label1:
        $r6 = staticinvoke java.lang.Integer.valueOf(r5);

        $r7 = (java.util.HashMap) $r3;

        $z1 = virtualinvoke $r0.verifyAccount($r6, $r7);

        if $z1 == 0 goto label2;

        $r11 = r1.userSessionData;

        virtualinvoke $r11.setValue("account-verified-id", r5);

        $r12 = virtualinvoke r1.success(r1);

        $r13 = virtualinvoke $r12.feedback("verify-account.success");

        $r14 = virtualinvoke $r13.build();

        return $r14;

     label2:
        $r8 = virtualinvoke r1.failed(r1);

        $r9 = virtualinvoke $r8.feedback("verify-account.failed");

        $r10 = virtualinvoke $r9.build();

        return $r10;
    }

    private java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)
    {
        java.util.Iterator $r4;
        java.util.Enumeration $r2;
        java.util.HashMap $r0, $r5;
        org.owasp.webgoat.lessons.authbypass.VerifyAccount r9;
        java.util.ArrayList $r3;
        javax.servlet.http.HttpServletRequest r1;
        java.lang.Object $r6;
        java.lang.String r7, $r8;
        boolean $z0, $z1;

        r9 := @this;

        r1 := @parameter0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<init>();

        $r2 = interfaceinvoke r1.getParameterNames();

        $r3 = staticinvoke java.util.Collections.list($r2);

        $r4 = interfaceinvoke $r3.iterator();

     label1:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r4.next();

        r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke r7.contains("secQuestion");

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r1.getParameter(r7);

        interfaceinvoke $r0.put(r7, $r8);

     label2:
        goto label1;

     label3:
        $r5 = (java.util.HashMap) $r0;

        return $r5;
    }
}
