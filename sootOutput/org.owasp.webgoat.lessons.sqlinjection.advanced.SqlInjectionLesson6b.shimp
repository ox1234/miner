public class org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    private final org.owasp.webgoat.container.LessonDataSource dataSource;

    public void <init>(org.owasp.webgoat.container.LessonDataSource)
    {
        org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b r0;
        org.owasp.webgoat.container.LessonDataSource r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.dataSource = r1;

        return;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String) throws java.io.IOException
    {
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r3, $r5;
        org.owasp.webgoat.container.assignments.AttackResult $r4, $r6;
        org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @this;

        r0 := @parameter0;

        $r2 = virtualinvoke r1.getPassword();

        $z0 = virtualinvoke r0.equals($r2);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.success(r1);

        $r6 = virtualinvoke $r5.build();

        return $r6;

     label1:
        $r3 = virtualinvoke r1.failed(r1);

        $r4 = virtualinvoke $r3.build();

        return $r4;
    }

    protected java.lang.String getPassword()
    {
        java.lang.Throwable $r6, $r7, $r8;
        org.owasp.webgoat.container.LessonDataSource $r1;
        java.sql.Connection $r2;
        java.sql.SQLException $r10;
        java.sql.ResultSet $r4;
        java.lang.String r9, r9_1, r9_2, r9_3, r9_4, r9_5, r9_6, r9_7;
        boolean $z0;
        java.lang.Exception $r5;
        java.sql.Statement $r3;
        org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b r0;

        r0 := @this;

(0)     r9 = "dave";

     label01:
        $r1 = r0.dataSource;

(1)     $r2 = virtualinvoke $r1.getConnection();

     label02:
        $r3 = interfaceinvoke $r2.createStatement(1004, 1007);

        $r4 = interfaceinvoke $r3.executeQuery("SELECT password FROM user_system_data WHERE user_name = \'dave\'");

(2)     if $r4 == null goto label03;

        $z0 = interfaceinvoke $r4.first();

(3)     if $z0 == 0 goto label03;

(4)     r9_1 = interfaceinvoke $r4.getString("password");

     label03:
        r9_2 = Phi(r9 #2, r9 #3, r9_1 #4);

(5)     goto label05;

     label04:
(6)     $r8 := @caughtexception;

        r9_3 = Phi(r9 #1, r9_1 #4);

        $r10 = (java.sql.SQLException) $r8;

(7)     virtualinvoke $r10.printStackTrace();

     label05:
        r9_4 = Phi(r9_2 #5, r9_3 #7);

(8)     if $r2 == null goto label11;

        interfaceinvoke $r2.close();

        goto label11;

     label06:
        $r7 := @caughtexception;

        r9_5 = Phi(r9 #1, r9_1 #4, r9_2 #5, r9_3 #6);

(9)     if $r2 == null goto label10;

     label07:
        interfaceinvoke $r2.close();

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        virtualinvoke $r7.addSuppressed($r6);

     label10:
        throw $r7;

     label11:
(10)    goto label13;

     label12:
        $r5 := @caughtexception;

        r9_6 = Phi(r9 #0, r9_4 #8, r9_5 #9);

(11)    virtualinvoke $r5.printStackTrace();

     label13:
        r9_7 = Phi(r9_4 #10, r9_6 #11);

        return r9_7;

        catch java.sql.SQLException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Exception from label01 to label11 with label12;
    }
}
