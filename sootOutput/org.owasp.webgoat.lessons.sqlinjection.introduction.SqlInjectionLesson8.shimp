public class org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8 extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    private final org.owasp.webgoat.container.LessonDataSource dataSource;

    public void <init>(org.owasp.webgoat.container.LessonDataSource)
    {
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8 r0;
        org.owasp.webgoat.container.LessonDataSource r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.dataSource = r1;

        return;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String, java.lang.String)
    {
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8 r0;
        org.owasp.webgoat.container.assignments.AttackResult $r3;
        java.lang.String r1, r2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = virtualinvoke r0.injectableQueryConfidentiality(r1, r2);

        return $r3;
    }

    protected org.owasp.webgoat.container.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)
    {
        java.sql.Connection $r6;
        java.sql.ResultSet $r8;
        boolean $z0;
        java.lang.Exception $r26;
        org.owasp.webgoat.container.assignments.AttackResult $r11, $r14, $r20, $r25, $r31, $r39;
        java.lang.StringBuilder $r40;
        java.lang.Throwable $r32, $r33, $r34;
        org.owasp.webgoat.container.LessonDataSource $r5;
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r10, $r12, $r13, $r16, $r17, $r19, $r21, $r22, $r24, $r27, $r30, $r35, $r38;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8 r4;
        java.sql.SQLException $r41;
        int $i0;
        java.lang.String r1, r2, $r3, $r15, $r18, $r23, $r28, $r29, $r36, $r37;
        java.sql.Statement $r7, $r9;

        r4 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<init>();

        $r3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(r1, r2) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("SELECT * FROM employees WHERE last_name = \'\u0001\' AND auth_tan = \'\u0001\'");

     label01:
        $r5 = r4.dataSource;

        $r6 = virtualinvoke $r5.getConnection();

     label02:
        $r7 = interfaceinvoke $r6.createStatement(1004, 1008);

        staticinvoke org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.log($r6, $r3);

        $r8 = interfaceinvoke $r7.executeQuery($r3);

        $r9 = interfaceinvoke $r8.getStatement();

        if $r9 == null goto label11;

        $z0 = interfaceinvoke $r8.first();

        if $z0 == 0 goto label08;

        $r15 = staticinvoke org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.generateTable($r8);

        virtualinvoke $r40.append($r15);

        interfaceinvoke $r8.last();

        $i0 = interfaceinvoke $r8.getRow();

        if $i0 <= 1 goto label05;

        $r21 = virtualinvoke r4.success(r4);

        $r22 = virtualinvoke $r21.feedback("sql-injection.8.success");

        $r23 = virtualinvoke $r40.toString();

        $r24 = virtualinvoke $r22.output($r23);

        $r25 = virtualinvoke $r24.build();

     label03:
        if $r6 == null goto label04;

        interfaceinvoke $r6.close();

     label04:
        return $r25;

     label05:
        $r16 = virtualinvoke r4.failed(r4);

        $r17 = virtualinvoke $r16.feedback("sql-injection.8.one");

        $r18 = virtualinvoke $r40.toString();

        $r19 = virtualinvoke $r17.output($r18);

        $r20 = virtualinvoke $r19.build();

     label06:
        if $r6 == null goto label07;

        interfaceinvoke $r6.close();

     label07:
        return $r20;

     label08:
        $r12 = virtualinvoke r4.failed(r4);

        $r13 = virtualinvoke $r12.feedback("sql-injection.8.no.results");

        $r14 = virtualinvoke $r13.build();

     label09:
        if $r6 == null goto label10;

        interfaceinvoke $r6.close();

     label10:
        return $r14;

     label11:
        $r10 = virtualinvoke r4.failed(r4);

        $r11 = virtualinvoke $r10.build();

     label12:
        if $r6 == null goto label13;

        interfaceinvoke $r6.close();

     label13:
        return $r11;

     label14:
        $r34 := @caughtexception;

        $r35 = virtualinvoke r4.failed(r4);

        $r41 = (java.sql.SQLException) $r34;

        $r36 = virtualinvoke $r41.getMessage();

        $r37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r36) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("<br><span class=\'feedback-negative\'>\u0001</span>");

        $r38 = virtualinvoke $r35.output($r37);

        $r39 = virtualinvoke $r38.build();

     label15:
        if $r6 == null goto label16;

        interfaceinvoke $r6.close();

     label16:
        return $r39;

     label17:
        $r33 := @caughtexception;

        if $r6 == null goto label21;

     label18:
        interfaceinvoke $r6.close();

     label19:
        goto label21;

     label20:
        $r32 := @caughtexception;

        virtualinvoke $r33.addSuppressed($r32);

     label21:
        throw $r33;

     label22:
        $r26 := @caughtexception;

        $r27 = virtualinvoke r4.failed(r4);

        $r28 = virtualinvoke $r26.getMessage();

        $r29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r28) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("<br><span class=\'feedback-negative\'>\u0001</span>");

        $r30 = virtualinvoke $r27.output($r29);

        $r31 = virtualinvoke $r30.build();

        return $r31;

        catch java.sql.SQLException from label02 to label03 with label14;
        catch java.sql.SQLException from label05 to label06 with label14;
        catch java.sql.SQLException from label08 to label09 with label14;
        catch java.sql.SQLException from label11 to label12 with label14;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Exception from label01 to label04 with label22;
        catch java.lang.Exception from label05 to label07 with label22;
        catch java.lang.Exception from label08 to label10 with label22;
        catch java.lang.Exception from label11 to label13 with label22;
        catch java.lang.Exception from label14 to label16 with label22;
        catch java.lang.Exception from label17 to label22 with label22;
    }

    public static java.lang.String generateTable(java.sql.ResultSet) throws java.sql.SQLException
    {
        java.sql.ResultSet r0;
        int $i0, $i1, $i2, i3, i4, i3_1, i3_2, i4_1, i4_2, i4_3, i4_4, i3_3;
        java.lang.String $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.sql.ResultSetMetaData $r1;

        r0 := @parameter0;

        $r1 = interfaceinvoke r0.getMetaData();

        $i0 = interfaceinvoke $r1.getColumnCount();

        interfaceinvoke r0.beforeFirst();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        virtualinvoke $r2.append("<table>");

        $z0 = interfaceinvoke r0.next();

        if $z0 == 0 goto label6;

        virtualinvoke $r2.append("<tr>");

(0)     i3 = 1;

     label1:
        i3_1 = Phi(i3 #0, i3_2 #1);

        $i1 = $i0 + 1;

        if i3_1 >= $i1 goto label2;

        $r6 = interfaceinvoke $r1.getColumnName(i3_1);

        $r7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r6) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("<th>\u0001</th>");

        virtualinvoke $r2.append($r7);

        i3_2 = i3_1 + 1;

(1)     goto label1;

     label2:
        virtualinvoke $r2.append("</tr>");

(2)     interfaceinvoke r0.beforeFirst();

     label3:
        i4 = Phi(i4 #2, i4_2 #6);

        $z1 = interfaceinvoke r0.next();

(3)     if $z1 == 0 goto label7;

        virtualinvoke $r2.append("<tr>");

(4)     i4_1 = 1;

     label4:
        i4_2 = Phi(i4_1 #4, i4_3 #5);

        $i2 = $i0 + 1;

        if i4_2 >= $i2 goto label5;

        $r4 = interfaceinvoke r0.getString(i4_2);

        $r5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r4) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("<td>\u0001</td>");

        virtualinvoke $r2.append($r5);

        i4_3 = i4_2 + 1;

(5)     goto label4;

     label5:
        virtualinvoke $r2.append("</tr>");

(6)     goto label3;

     label6:
(7)     virtualinvoke $r2.append("Query Successful; however no data was returned from this query.");

     label7:
        i4_4 = Phi(i4 #3, i4 #7);

        i3_3 = Phi(i3_1 #3, i3 #7);

        virtualinvoke $r2.append("</table>");

        $r3 = virtualinvoke $r2.toString();

        return $r3;
    }

    public static void log(java.sql.Connection, java.lang.String)
    {
        java.lang.Throwable $r8;
        java.io.PrintStream $r9;
        java.sql.Connection r6;
        java.util.Date $r3;
        java.text.SimpleDateFormat $r12;
        java.sql.SQLException $r13;
        java.util.Calendar $r1;
        java.sql.Statement $r7;
        java.lang.String $r0, $r4, $r5, $r10, r11;

        r6 := @parameter0;

        r11 := @parameter1;

        $r0 = virtualinvoke r11.replace(39, 34);

        $r1 = staticinvoke java.util.Calendar.getInstance();

        $r12 = new java.text.SimpleDateFormat;

        specialinvoke $r12.<init>("yyyy-MM-dd HH:mm:ss");

        $r3 = virtualinvoke $r1.getTime();

        $r4 = virtualinvoke $r12.format($r3);

        $r5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($r4, $r0) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("INSERT INTO access_log (time, action) VALUES (\'\u0001\', \'\u0001\')");

     label1:
        $r7 = interfaceinvoke r6.createStatement(1005, 1008);

        interfaceinvoke $r7.executeUpdate($r5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = java.lang.System.err;

        $r13 = (java.sql.SQLException) $r8;

        $r10 = virtualinvoke $r13.getMessage();

        virtualinvoke $r9.println($r10);

     label4:
        return;

        catch java.sql.SQLException from label1 to label2 with label3;
    }
}
