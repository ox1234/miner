public class org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3 extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    private final org.owasp.webgoat.container.LessonDataSource dataSource;

    public void <init>(org.owasp.webgoat.container.LessonDataSource)
    {
        org.owasp.webgoat.container.LessonDataSource r1;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3 r0;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.dataSource = r1;

        return;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String)
    {
        org.owasp.webgoat.container.assignments.AttackResult $r2;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3 r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = virtualinvoke r0.injectableQuery(r1);

        return $r2;
    }

    protected org.owasp.webgoat.container.assignments.AttackResult injectableQuery(java.lang.String)
    {
        java.sql.Connection $r2;
        java.sql.ResultSet $r6;
        boolean $z0;
        java.lang.Exception $r19;
        org.owasp.webgoat.container.assignments.AttackResult $r12, $r18, $r26, $r33;
        java.lang.StringBuilder $r36;
        java.lang.Throwable $r27, $r28, $r29, $r34, $r35;
        org.owasp.webgoat.container.LessonDataSource $r1;
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r9, $r11, $r15, $r17, $r20, $r25, $r30, $r32;
        java.sql.SQLException $r37;
        org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3 r0;
        java.lang.String r5, $r8, $r10, $r13, $r14, $r16, $r22, $r23, $r24, $r31;
        java.sql.Statement $r3, $r4;
        java.lang.Class $r21;

        r0 := @this;

        r5 := @parameter0;

     label01:
        $r1 = r0.dataSource;

        $r2 = virtualinvoke $r1.getConnection();

     label02:
        $r3 = interfaceinvoke $r2.createStatement(1004, 1007);

     label03:
        $r4 = interfaceinvoke $r2.createStatement(1004, 1007);

        interfaceinvoke $r3.executeUpdate(r5);

        $r6 = interfaceinvoke $r4.executeQuery("SELECT * FROM employees WHERE last_name=\'Barnett\';");

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<init>();

        interfaceinvoke $r6.first();

        $r8 = interfaceinvoke $r6.getString("department");

        $z0 = virtualinvoke $r8.equals("Sales");

        if $z0 == 0 goto label07;

        $r13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(r5) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("<span class=\'feedback-positive\'>\u0001</span>");

        virtualinvoke $r36.append($r13);

        $r14 = staticinvoke org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.generateTable($r6);

        virtualinvoke $r36.append($r14);

        $r15 = virtualinvoke r0.success(r0);

        $r16 = virtualinvoke $r36.toString();

        $r17 = virtualinvoke $r15.output($r16);

        $r18 = virtualinvoke $r17.build();

     label04:
        if $r3 == null goto label05;

        interfaceinvoke $r3.close();

     label05:
        if $r2 == null goto label06;

        interfaceinvoke $r2.close();

     label06:
        return $r18;

     label07:
        $r9 = virtualinvoke r0.failed(r0);

        $r10 = virtualinvoke $r36.toString();

        $r11 = virtualinvoke $r9.output($r10);

        $r12 = virtualinvoke $r11.build();

     label08:
        if $r3 == null goto label09;

        interfaceinvoke $r3.close();

     label09:
        if $r2 == null goto label10;

        interfaceinvoke $r2.close();

     label10:
        return $r12;

     label11:
        $r35 := @caughtexception;

        if $r3 == null goto label15;

     label12:
        interfaceinvoke $r3.close();

     label13:
        goto label15;

     label14:
        $r34 := @caughtexception;

        virtualinvoke $r35.addSuppressed($r34);

     label15:
        throw $r35;

     label16:
        $r29 := @caughtexception;

        $r30 = virtualinvoke r0.failed(r0);

        $r37 = (java.sql.SQLException) $r29;

        $r31 = virtualinvoke $r37.getMessage();

        $r32 = virtualinvoke $r30.output($r31);

        $r33 = virtualinvoke $r32.build();

     label17:
        if $r2 == null goto label18;

        interfaceinvoke $r2.close();

     label18:
        return $r33;

     label19:
        $r28 := @caughtexception;

        if $r2 == null goto label23;

     label20:
        interfaceinvoke $r2.close();

     label21:
        goto label23;

     label22:
        $r27 := @caughtexception;

        virtualinvoke $r28.addSuppressed($r27);

     label23:
        throw $r28;

     label24:
        $r19 := @caughtexception;

        $r20 = virtualinvoke r0.failed(r0);

        $r21 = virtualinvoke r0.getClass();

        $r22 = virtualinvoke $r21.getName();

        $r23 = virtualinvoke $r19.getMessage();

        $r24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($r22, $r23) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("\u0001 : \u0001");

        $r25 = virtualinvoke $r20.output($r24);

        $r26 = virtualinvoke $r25.build();

        return $r26;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.sql.SQLException from label02 to label05 with label16;
        catch java.sql.SQLException from label07 to label09 with label16;
        catch java.sql.SQLException from label11 to label16 with label16;
        catch java.lang.Throwable from label02 to label05 with label19;
        catch java.lang.Throwable from label07 to label09 with label19;
        catch java.lang.Throwable from label11 to label17 with label19;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Exception from label01 to label06 with label24;
        catch java.lang.Exception from label07 to label10 with label24;
        catch java.lang.Exception from label11 to label18 with label24;
        catch java.lang.Exception from label19 to label24 with label24;
    }
}
