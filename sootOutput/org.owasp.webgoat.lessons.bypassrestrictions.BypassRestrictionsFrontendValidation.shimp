public class org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFrontendValidation extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{

    public void <init>()
    {
        org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFrontendValidation r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public org.owasp.webgoat.container.assignments.AttackResult completed(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer)
    {
        java.lang.Integer r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.owasp.webgoat.container.assignments.AttackResult $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26;
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25;
        int $i0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7;
        org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFrontendValidation r8;

        r8 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 := @parameter3;

        r5 := @parameter4;

        r6 := @parameter5;

        r7 := @parameter6;

        r0 := @parameter7;

        $i0 = virtualinvoke r0.intValue();

        if $i0 <= 0 goto label1;

        $r25 = virtualinvoke r8.failed(r8);

        $r26 = virtualinvoke $r25.build();

        return $r26;

     label1:
        $z0 = virtualinvoke r1.matches("^[a-z]{3}$");

        if $z0 == 0 goto label2;

        $r23 = virtualinvoke r8.failed(r8);

        $r24 = virtualinvoke $r23.build();

        return $r24;

     label2:
        $z1 = virtualinvoke r2.matches("^[0-9]{3}$");

        if $z1 == 0 goto label3;

        $r21 = virtualinvoke r8.failed(r8);

        $r22 = virtualinvoke $r21.build();

        return $r22;

     label3:
        $z2 = virtualinvoke r3.matches("^[a-zA-Z0-9 ]*$");

        if $z2 == 0 goto label4;

        $r19 = virtualinvoke r8.failed(r8);

        $r20 = virtualinvoke $r19.build();

        return $r20;

     label4:
        $z3 = virtualinvoke r4.matches("^(one|two|three|four|five|six|seven|eight|nine)$");

        if $z3 == 0 goto label5;

        $r17 = virtualinvoke r8.failed(r8);

        $r18 = virtualinvoke $r17.build();

        return $r18;

     label5:
        $z4 = virtualinvoke r5.matches("^\\d{5}$");

        if $z4 == 0 goto label6;

        $r15 = virtualinvoke r8.failed(r8);

        $r16 = virtualinvoke $r15.build();

        return $r16;

     label6:
        $z5 = virtualinvoke r6.matches("^\\d{5}(-\\d{4})?$");

        if $z5 == 0 goto label7;

        $r13 = virtualinvoke r8.failed(r8);

        $r14 = virtualinvoke $r13.build();

        return $r14;

     label7:
        $z6 = virtualinvoke r7.matches("^[2-9]\\d{2}-?\\d{3}-?\\d{4}$");

        if $z6 == 0 goto label8;

        $r11 = virtualinvoke r8.failed(r8);

        $r12 = virtualinvoke $r11.build();

        return $r12;

     label8:
        $r9 = virtualinvoke r8.success(r8);

        $r10 = virtualinvoke $r9.build();

        return $r10;
    }
}
