public class org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval extends org.owasp.webgoat.container.assignments.AssignmentEndpoint
{
    private static final org.slf4j.Logger log;
    private final java.io.File catPicturesDirectory;

    public void <init>(java.lang.String)
    {
        java.lang.String r2;
        java.io.File $r1, $r3;
        org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval r0;

        r0 := @this;

        r2 := @parameter0;

        specialinvoke r0.<init>();

        $r1 = new java.io.File;

        specialinvoke $r1.<init>(r2, "/PathTraversal//cats");

        r0.catPicturesDirectory = $r1;

        $r3 = r0.catPicturesDirectory;

        virtualinvoke $r3.mkdirs();

        return;
    }

    public void initAssignment()
    {
        java.lang.Throwable $r14, $r20, $r21;
        org.springframework.core.io.ClassPathResource $r7;
        java.nio.file.OpenOption[] $r6;
        int i0, i0_1, i0_2;
        java.lang.String $r8, $r13, $r18, $r19;
        java.nio.file.Path $r4, $r5;
        org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval r0;
        org.slf4j.Logger $r15, $r17;
        java.io.FileOutputStream $r10;
        java.io.File $r1, $r2, $r3, $r11, $r12;
        java.lang.Exception $r16;
        java.io.InputStream $r9;

        r0 := @this;

(0)     i0 = 1;

     label01:
        i0_1 = Phi(i0 #0, i0_2 #1);

        if i0_1 > 10 goto label13;

     label02:
        $r7 = new org.springframework.core.io.ClassPathResource;

        $r8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(i0_1) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("lessons/pathtraversal/images/cats/\u0001.jpg");

        specialinvoke $r7.<init>($r8);

        $r9 = virtualinvoke $r7.getInputStream();

     label03:
        $r10 = new java.io.FileOutputStream;

        $r11 = new java.io.File;

        $r12 = r0.catPicturesDirectory;

        $r13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(i0_1) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("\u0001.jpg");

        specialinvoke $r11.<init>($r12, $r13);

        specialinvoke $r10.<init>($r11);

        staticinvoke org.springframework.util.FileCopyUtils.copy($r9, $r10);

     label04:
        if $r9 == null goto label10;

        virtualinvoke $r9.close();

        goto label10;

     label05:
        $r21 := @caughtexception;

        if $r9 == null goto label09;

     label06:
        virtualinvoke $r9.close();

     label07:
        goto label09;

     label08:
        $r20 := @caughtexception;

        virtualinvoke $r21.addSuppressed($r20);

     label09:
        throw $r21;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;

        $r17 = org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.log;

        $r18 = virtualinvoke $r16.getMessage();

        $r19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r18) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("Unable to copy pictures\u0001");

        interfaceinvoke $r17.error($r19);

     label12:
        i0_2 = i0_1 + 1;

(1)     goto label01;

     label13:
        $r1 = r0.catPicturesDirectory;

        $r2 = virtualinvoke $r1.getParentFile();

        $r3 = virtualinvoke $r2.getParentFile();

     label14:
        $r4 = virtualinvoke $r3.toPath();

        $r5 = interfaceinvoke $r4.resolve("path-traversal-secret.jpg");

        $r6 = newarray (java.nio.file.OpenOption)[0];

        staticinvoke java.nio.file.Files.writeString($r5, "You found it submit the SHA-512 hash of your username as answer", $r6);

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

        $r15 = org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.log;

        interfaceinvoke $r15.error("Unable to write secret in: {}", $r3, $r14);

     label17:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Exception from label02 to label10 with label11;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public org.owasp.webgoat.container.assignments.AttackResult execute(java.lang.String)
    {
        org.owasp.webgoat.container.assignments.AttackResult$AttackResultBuilder $r5, $r7;
        org.owasp.webgoat.container.session.WebSession $r1;
        org.owasp.webgoat.container.assignments.AttackResult $r6, $r8;
        java.lang.String $r2, $r3, r4;
        org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval r0;
        boolean $z0;

        r0 := @this;

        r4 := @parameter0;

        $r1 = virtualinvoke r0.getWebSession();

        $r2 = virtualinvoke $r1.getUserName();

        $r3 = staticinvoke org.springframework.security.core.token.Sha512DigestUtils.shaHex($r2);

        $z0 = virtualinvoke $r3.equalsIgnoreCase(r4);

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.success(r0);

        $r8 = virtualinvoke $r7.build();

        return $r8;

     label1:
        $r5 = virtualinvoke r0.failed(r0);

        $r6 = virtualinvoke $r5.build();

        return $r6;
    }

    public org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)
    {
        byte[] $r19, $r30, $r31, $r36;
        java.net.URI $r11, $r24;
        org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval r4;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.http.MediaType $r22, $r34;
        java.io.Serializable $r44, $r44_1, $r44_2, $r44_3;
        org.springframework.http.ResponseEntity$HeadersBuilder $r14, $r27;
        java.lang.Throwable $r40;
        org.springframework.http.ResponseEntity$BodyBuilder $r10, $r15, $r21, $r23, $r28, $r33, $r35, $r38, $r42;
        javax.servlet.http.HttpServletRequest r0;
        int $i0;
        java.lang.String $r1, $r2, $r6, $r7, $r8, $r12, $r13, $r18, $r25, $r26;
        org.slf4j.Logger $r41;
        java.util.Base64$Encoder $r29;
        java.io.File $r3, $r5, $r16;
        org.springframework.http.HttpStatus $r9;
        org.springframework.http.ResponseEntity $r20, $r32, $r37, $r39, $r43;
        java.io.File[] $r17;

        r4 := @this;

        r0 := @parameter0;

        $r1 = interfaceinvoke r0.getQueryString();

(0)     if $r1 == null goto label02;

        $z2 = virtualinvoke $r1.contains("..");

        if $z2 != 0 goto label01;

        $z3 = virtualinvoke $r1.contains("/");

        if $z3 == 0 goto label02;

     label01:
        $r38 = staticinvoke org.springframework.http.ResponseEntity.badRequest();

        $r39 = interfaceinvoke $r38.body("Illegal characters are not allowed in the query params");

        return $r39;

     label02:
        $r2 = interfaceinvoke r0.getParameter("id");

        $r3 = new java.io.File;

        $r5 = r4.catPicturesDirectory;

        if $r2 != null goto label03;

        $i0 = staticinvoke org.apache.commons.lang3.RandomUtils.nextInt(1, 11);

        $r44 = staticinvoke java.lang.Integer.valueOf($i0);

(1)     goto label04;

     label03:
(2)     $r44_1 = $r2;

     label04:
        $r44_2 = Phi($r44 #1, $r44_1 #2);

(3)     $r6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.io.Serializable)>($r44_2) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("\u0001.jpg");

        specialinvoke $r3.<init>($r5, $r6);

        $r7 = virtualinvoke $r3.getName();

        $r8 = virtualinvoke $r7.toLowerCase();

        $z0 = virtualinvoke $r8.contains("path-traversal-secret.jpg");

        if $z0 == 0 goto label06;

        $r33 = staticinvoke org.springframework.http.ResponseEntity.ok();

        $r34 = staticinvoke org.springframework.http.MediaType.parseMediaType("image/jpeg");

        $r35 = interfaceinvoke $r33.contentType($r34);

        $r36 = staticinvoke org.springframework.util.FileCopyUtils.copyToByteArray($r3);

        $r37 = interfaceinvoke $r35.body($r36);

     label05:
        return $r37;

     label06:
        $z1 = virtualinvoke $r3.exists();

        if $z1 == 0 goto label08;

        $r21 = staticinvoke org.springframework.http.ResponseEntity.ok();

        $r22 = staticinvoke org.springframework.http.MediaType.parseMediaType("image/jpeg");

        $r23 = interfaceinvoke $r21.contentType($r22);

        $r24 = new java.net.URI;

        $r25 = virtualinvoke $r3.getName();

        $r26 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r25) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("/PathTraversal/random-picture?id=\u0001");

        specialinvoke $r24.<init>($r26);

        $r27 = interfaceinvoke $r23.location($r24);

        $r28 = (org.springframework.http.ResponseEntity$BodyBuilder) $r27;

        $r29 = staticinvoke java.util.Base64.getEncoder();

        $r30 = staticinvoke org.springframework.util.FileCopyUtils.copyToByteArray($r3);

        $r31 = virtualinvoke $r29.encode($r30);

        $r32 = interfaceinvoke $r28.body($r31);

     label07:
        return $r32;

     label08:
        $r9 = org.springframework.http.HttpStatus.NOT_FOUND;

        $r10 = staticinvoke org.springframework.http.ResponseEntity.status($r9);

        $r11 = new java.net.URI;

        $r12 = virtualinvoke $r3.getName();

        $r13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r12) java.lang.invoke.StringConcatFactory.makeConcatWithConstants("/PathTraversal/random-picture?id=\u0001");

        specialinvoke $r11.<init>($r13);

        $r14 = interfaceinvoke $r10.location($r11);

        $r15 = (org.springframework.http.ResponseEntity$BodyBuilder) $r14;

        $r16 = virtualinvoke $r3.getParentFile();

        $r17 = virtualinvoke $r16.listFiles();

        $r18 = staticinvoke org.springframework.util.StringUtils.arrayToCommaDelimitedString($r17);

        $r19 = virtualinvoke $r18.getBytes();

        $r20 = interfaceinvoke $r15.body($r19);

     label09:
        return $r20;

     label10:
        $r40 := @caughtexception;

        $r44_3 = Phi($r44 #0, $r44_2 #3);

        $r41 = org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.log;

        interfaceinvoke $r41.error("Image not found", $r40);

        $r42 = staticinvoke org.springframework.http.ResponseEntity.badRequest();

        $r43 = interfaceinvoke $r42.build();

        return $r43;

        catch java.io.IOException from label02 to label05 with label10;
        catch java.net.URISyntaxException from label02 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.net.URISyntaxException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.net.URISyntaxException from label08 to label09 with label10;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke org.slf4j.LoggerFactory.getLogger(class "Lorg/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval;");

        org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.log = $r0;

        return;
    }
}
